{"version":3,"sources":["webpack:///webpack/bootstrap 613ea15ec3d566eb1125","webpack:///./scripts/Environment.js","webpack:///./scripts/Init.js","webpack:///./scripts/SpaceGuard.js","webpack:///./scripts/Constants.js","webpack:///./scripts/Comet.js","webpack:///./scripts/Bomb.js","webpack:///./scripts/StarshipShield.js","webpack:///./scripts/GameSprites.js","webpack:///./scripts/GuardShield.js","webpack:///./scripts/Levels.js"],"names":["requestAnimFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","TOUCH_DOWN_EVENT_NAME","TOUCH_UP_EVENT_NAME","TOUCH_MOVE_EVENT_NAME","TOUCH_DOUBLE_TAB_EVENT_NAME","isAndroid","navigator","userAgent","match","isBlackBerry","isIOS","isOpera","isWindows","isMobile","spaceguard","Spaceguard","canvas","ctx","cx","cy","guard","x","undefined","y","width","height","shield","defuseRadius","starship","sprites","comets","frameUpdateTime","lastUpdateTime","levelStartTime","pauseTime","randomRollTime","lastRollTime","Date","level","score","randomObjects","onDefuse","currentDefuseRadius","spaceBackground","canvasId","document","getElementById","getContext","forEach","sprite","img","createElement","id","src","style","display","body","appendChild","onload","drawIntroScreen","load","background","rect","fillStyle","fillRect","font","textAlign","wrapText","addEventListener","onClick","bind","onContextMenu","onGame","onPause","i","push","position","onKeyUp","onMouseMove","onMouseOut","splash","loop","clearRect","drawImage","beginPath","strokeStyle","lineWidth","arc","Math","PI","stroke","comet","draw","collides","destroyed","ceil","damage","index","indexOf","splice","time","datediff","ms","creationBarrier","rand","random","convertRate","creationRate","roll","creation","round","bomb","guardShield","starshipShield","obj","type","gshield","sshield","trigger","drawCredits","fillText","fontStyle","drawStats","diff","setMilliseconds","pause","message","duration","drawBackground","drawRandomObjects","drawObjects","clearEventListeners","length","game","removeEventListener","event","pageX","offsetLeft","pageY","offsetTop","defuseBomb","keyCode","preventDefault","date1","date2","days","hours","minutes","seconds","parseInt","getTime","obj1","obj2","x1","y1","w1","h1","ox","oy","ow","oh","x2","y2","w2","h2","currDate","getMinutes","getSeconds","gColor","getBarColor","sColor","strokeRect","value","opaque","color","defuseInterval","setInterval","distance","sqrt","pow","clearInterval","text","drawStartTime","drawSplashScreen","rate","getFullYear","maxWidth","lineHeight","words","split","line","n","testLine","metrics","measureText","testWidth","introScreen","toString","SCALE","CANVAS_WIDTH","CANVAS_HEIGHT","KEY_ESCAPE","LOOP_DELAY","GUARD_SHIELD_BASE","STARSHIP_SHIELD_BASE","COMET_SCORE","SHIELD_SCORE","BOMB_SCORE","LEVEL_SCORE","CREATION_BARRIER_STEP","OBJ_TYPE_BOMB","OBJ_TYPE_GSHIELD","OBJ_TYPE_SSHIELD","sg","a","speedX","speed","speedY","floor","dfs","canvasSide","isOutOfMap","dist","abs"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;QC3DgBA,gB,GAAAA,gB;AAFhB;AACA;AACO,SAASA,gBAAT,GAA4B;AAC/B,WAAOC,OAAOC,qBAAP,IACHD,OAAOE,2BADJ,IAEHF,OAAOG,wBAFJ,IAGH,UAAUC,QAAV,EAAoB;AAChBJ,eAAOK,UAAP,CAAkBD,QAAlB,EAA4B,OAAO,EAAnC;AACH,KALL;AAMH;;AAED;AACA;kBACe;AACX;AACAE,2BAAuB,sBAFZ;AAGXC,yBAAqB,kBAHV;AAIXC,2BAAuB,qBAJZ;AAKXC,iCAA6B,iBALlB;;AAOXC,eAAW,qBAAY;AACnB,eAAOC,UAAUC,SAAV,CAAoBC,KAApB,CAA0B,UAA1B,CAAP;AACH,KATU;AAUXC,kBAAc,wBAAY;AACtB,eAAOH,UAAUC,SAAV,CAAoBC,KAApB,CAA0B,aAA1B,CAAP;AACH,KAZU;AAaXE,WAAO,iBAAY;AACf,eAAOJ,UAAUC,SAAV,CAAoBC,KAApB,CAA0B,mBAA1B,CAAP;AACH,KAfU;AAgBXG,aAAS,mBAAY;AACjB,eAAOL,UAAUC,SAAV,CAAoBC,KAApB,CAA0B,aAA1B,CAAP;AACH,KAlBU;AAmBXI,eAAW,qBAAY;AACnB,eAAON,UAAUC,SAAV,CAAoBC,KAApB,CAA0B,WAA1B,CAAP;AACH,KArBU;AAsBXK,cAAU,oBAAY;AAClB,eAAQ,KAAKR,SAAL,MAAoB,KAAKI,YAAL,EAApB,IAA2C,KAAKC,KAAL,EAA3C,IAA2D,KAAKC,OAAL,EAA3D,IAA6E,KAAKC,SAAL,EAArF;AACH;AAxBU,C;;;;;;;;;ACbf;;;;AACA;;;;AAEA;AACAjB,OAAOD,gBAAP;AACAC,OAAOmB,UAAP,GAAoB,0BAApB,C;;;;;;;;;;;;;;;ACLA;;AAcA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;;;;;IAKqBC,U;AACjB;;;AAGA,0BAAc;AAAA;;AACV,aAAKC,MAAL;AACA,aAAKC,GAAL;AACA,aAAKC,EAAL,CAHU,CAGD;AACT,aAAKC,EAAL;AACA,aAAKC,KAAL,GAAa;AACTC,eAAGC,SADM;AAETC,eAAGD,SAFM;AAGTE,mBAAO,qBAHE;AAITC,oBAAQ,qBAJC;AAKTC,oBAAQ,GALC;AAMTC,0BAAc;AANL,SAAb;AAQA,aAAKC,QAAL,GAAgB;AACZP,eAAGC,SADS;AAEZC,eAAGD,SAFS;AAGZE,mBAAO,sBAHK;AAIZC,oBAAQ,sBAJI;AAKZC,oBAAQ;AALI,SAAhB;AAOA,aAAKG,OAAL,GAAe,EAAf;AACA,aAAKC,MAAL;AACA,aAAKC,eAAL,GAAuB,OAAO,EAA9B,CAtBU,CAsBwB;AAClC,aAAKC,cAAL,CAvBU,CAuBW;AACrB,aAAKC,cAAL,CAxBU,CAwBW;AACrB,aAAKC,SAAL,CAzBU,CAyBM;AAChB,aAAKC,cAAL,GAAsB,IAAtB;AACA,aAAKC,YAAL,GAAoB,IAAIC,IAAJ,EAApB;AACA,aAAKC,KAAL,GAAa,CAAb,CA5BU,CA4BM;AAChB,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,aAAL,GAAqB,EAArB;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA,aAAKC,mBAAL,GAA2B,CAA3B,CAhCU,CAgCoB;AAC9B,aAAKC,eAAL;AACH;;AAED;;;;;;;;;;mCAMWC,Q,EAAU;AAAA;;AACjB,iBAAK5B,MAAL,GAAc6B,SAASC,cAAT,CAAwBF,QAAxB,CAAd;AACA,iBAAK3B,GAAL,GAAW,KAAKD,MAAL,CAAY+B,UAAZ,CAAuB,IAAvB,CAAX;;AAEA;AACA,kCAAYC,OAAZ,CAAoB,UAACC,MAAD,EAAY;AAC5B;AACA,oBAAIC,MAAML,SAASM,aAAT,CAAuB,KAAvB,CAAV;AACAD,oBAAIE,EAAJ,GAASH,OAAOG,EAAhB;AACAF,oBAAIG,GAAJ,GAAUJ,OAAOI,GAAjB;AACAH,oBAAII,KAAJ,CAAUC,OAAV,GAAoB,MAApB;AACAV,yBAASW,IAAT,CAAcC,WAAd,CAA0BP,GAA1B;AACA,sBAAKrB,OAAL,CAAaoB,OAAOG,EAApB,IAA0BF,GAA1B,CAP4B,CAOG;;AAE/B;AACA,oBAAIA,IAAIE,EAAJ,IAAU,aAAV,IAA2B,CAAC,sBAAYvC,QAAZ,EAAhC,EAAwD;AACpDqC,wBAAIQ,MAAJ,GAAa,YAAM;AACf,8BAAKC,eAAL;AACH,qBAFD;AAGH;AACJ,aAfD;;AAiBA,iBAAKC,IAAL;AACA,mBAAO,IAAP;AACH;;;;;AAED;;;;;+BAKO;AACH;AACA,iBAAK5C,MAAL,CAAYQ,KAAZ,GAAoB,0CAApB;AACA,iBAAKR,MAAL,CAAYS,MAAZ,GAAqB,2CAArB;AACA,iBAAKT,MAAL,CAAYsC,KAAZ,CAAkBO,UAAlB,GAA+B,MAA/B;AACA,iBAAK3C,EAAL,GAAU,KAAKF,MAAL,CAAYQ,KAAZ,GAAoB,CAA9B;AACA,iBAAKL,EAAL,GAAU,KAAKH,MAAL,CAAYS,MAAZ,GAAqB,CAA/B;AACA,iBAAKR,GAAL,CAAS6C,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAK9C,MAAL,CAAYQ,KAAhC,EAAuC,KAAKR,MAAL,CAAYS,MAAnD;;AAEA;AACA,gBAAI,sBAAYZ,QAAZ,EAAJ,EAA4B;AACxB,qBAAKI,GAAL,CAAS8C,SAAT,GAAqB,MAArB;AACA,qBAAK9C,GAAL,CAAS+C,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKhD,MAAL,CAAYQ,KAAZ,mBAAxB,EAAmD,KAAKR,MAAL,CAAYS,MAAZ,mBAAnD;AACA,qBAAKR,GAAL,CAAS8C,SAAT,GAAqB,MAArB;AACA,qBAAK9C,GAAL,CAASgD,IAAT,GAAgB,YAAhB;AACA,qBAAKhD,GAAL,CAASiD,SAAT,GAAqB,QAArB;AACA,qBAAKC,QAAL,CAAc,wGAAd,EACK,KAAKnD,MAAL,CAAYQ,KAAZ,GAAoB,CAArB,mBADJ,EACsC,KAAKR,MAAL,CAAYS,MAAZ,GAAqB,CAAtB,mBADrC,EACuE,sBADvE,EACoF,qBADpF;AAEA;AACH;;AAED,iBAAKkC,eAAL;;AAEA;AACA,iBAAK3C,MAAL,CAAYoD,gBAAZ,CAA6B,OAA7B,EAAsC,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAtC,EAA+D,KAA/D;AACA,iBAAKtD,MAAL,CAAYoD,gBAAZ,CAA6B,aAA7B,EAA4C,KAAKG,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAA5C,EAA2E,KAA3E;;AAEA,mBAAO,IAAP;AACH;;;;;AAED;;;;+BAIO;AAAA;;AACH;AACA,iBAAKE,MAAL,GAAc,IAAd;AACA,iBAAKC,OAAL,GAAe,KAAf;AACA,iBAAKxC,cAAL,GAAsB,IAAII,IAAJ,EAAtB;AACA,iBAAKL,cAAL,GAAsB,IAAIK,IAAJ,EAAtB;AACA,iBAAKG,aAAL,GAAqB,EAArB;AACA,iBAAKpB,KAAL,CAAWC,CAAX,GAAe,KAAKH,EAApB;AACA,iBAAKE,KAAL,CAAWG,CAAX,GAAe,KAAKJ,EAApB;AACA,iBAAKC,KAAL,CAAWM,MAAX,GAAoB,iBAAW,KAAKY,KAAhB,EAAuBlB,KAAvB,CAA6BM,MAAjD;AACA,iBAAKN,KAAL,CAAWO,YAAX,GAA0B,iBAAW,KAAKW,KAAhB,EAAuBlB,KAAvB,CAA6BO,YAAvD;AACA,iBAAKP,KAAL,CAAW8B,GAAX,GAAiBL,SAASC,cAAT,CAAwB,OAAxB,CAAjB;AACA,iBAAKlB,QAAL,CAAcP,CAAd,GAAkB,KAAKH,EAAL,GAAW,KAAKU,QAAL,CAAcJ,KAAd,GAAsB,CAAnD;AACA,iBAAKI,QAAL,CAAcL,CAAd,GAAkB,KAAKJ,EAAL,GAAW,KAAKS,QAAL,CAAcH,MAAd,GAAuB,CAApD;AACA,iBAAKG,QAAL,CAAcF,MAAd,GAAuB,iBAAW,KAAKY,KAAhB,EAAuBV,QAAvB,CAAgCF,MAAvD;AACA,iBAAKE,QAAL,CAAcsB,GAAd,GAAoBL,SAASC,cAAT,CAAwB,UAAxB,CAApB;;AAEA;AACA,iBAAKhB,MAAL,GAAc,EAAd;AACA,iBAAK,IAAI4C,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AACzB,qBAAK5C,MAAL,CAAY6C,IAAZ,CAAiB,oBAAU,IAAV,CAAjB;AACA,qBAAK7C,MAAL,CAAY4C,CAAZ,EAAeE,QAAf;AACH;;AAED;AACA,iBAAK5D,MAAL,CAAYoD,gBAAZ,CAA6B,OAA7B,EAAsC,KAAKS,OAAL,CAAaP,IAAb,CAAkB,IAAlB,CAAtC;AACA,iBAAKtD,MAAL,CAAYoD,gBAAZ,CAA6B,WAA7B,EAA0C,KAAKU,WAAL,CAAiBR,IAAjB,CAAsB,IAAtB,CAA1C;AACA,iBAAKtD,MAAL,CAAYoD,gBAAZ,CAA6B,UAA7B,EAAyC,KAAKW,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAAzC;AACA,iBAAKtD,MAAL,CAAYsC,KAAZ,CAAkB,QAAlB,IAA8B,MAA9B;;AAEA;AACA,iBAAK0B,MAAL,CAAY,YAAY,KAAK1C,KAAL,GAAa,CAAzB,CAAZ,EAAyC,IAAzC,EAA+C,YAAM;AACjD5C,iCAAiB,OAAKuF,IAAtB;AACH,aAFD;;AAIA,mBAAO,IAAP;AACH;;;;;AAED;;;yCAGiB;AACb;AACA,iBAAKhE,GAAL,CAASiE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKlE,MAAL,CAAYQ,KAArC,EAA4C,KAAKR,MAAL,CAAYS,MAAxD;;AAEA;AACA,iBAAKR,GAAL,CAASkE,SAAT,CAAmB,KAAKtD,OAAL,CAAaD,QAAhC,EAA0C,KAAKA,QAAL,CAAcP,CAAd,mBAA1C,EAAmE,KAAKO,QAAL,CAAcL,CAAd,mBAAnE;AACH;;;;;AAED;;;sCAGc;AAAA;;AACV;AACA,iBAAKN,GAAL,CAASkE,SAAT,CAAmB,KAAKtD,OAAL,CAAaT,KAAhC,EAAuC,KAAKA,KAAL,CAAWC,CAAX,mBAAvC,EAA6D,KAAKD,KAAL,CAAWG,CAAX,mBAA7D;;AAEA,gBAAI,KAAKkB,QAAT,EAAmB;AACf,qBAAKxB,GAAL,CAASmE,SAAT;AACA,qBAAKnE,GAAL,CAASoE,WAAT,GAAuB,SAAvB;AACA,qBAAKpE,GAAL,CAASqE,SAAT,GAAqB,CAArB;AACA,qBAAKrE,GAAL,CAASsE,GAAT,CAAa,KAAKnE,KAAL,CAAWC,CAAX,GAAe,EAA5B,EAAgC,KAAKD,KAAL,CAAWG,CAAX,GAAe,EAA/C,EAAmD,KAAKmB,mBAAxD,EAA6E,CAA7E,EAAgF,IAAI8C,KAAKC,EAAzF;AACA,qBAAKxE,GAAL,CAASyE,MAAT;AACH;;AAED;AACA,iBAAK5D,MAAL,CAAYkB,OAAZ,CAAoB,UAAC2C,KAAD,EAAW;AAC3BA,sBAAMC,IAAN;AACA,oBAAI,OAAKC,QAAL,CAAcF,KAAd,EAAqB,OAAKvE,KAA1B,CAAJ,EAAsC;AAClCuE,0BAAMG,SAAN,GAAkB,IAAlB;AACA,2BAAK1E,KAAL,CAAWM,MAAX,IAAqB8D,KAAKO,IAAL,CAAUJ,MAAMK,MAAN,GAAe,CAAzB,CAArB,CAFkC,CAEgB;AAClD,2BAAKzD,KAAL,2BAHkC,CAGP;AAC9B;;AAED,oBAAI,OAAKsD,QAAL,CAAcF,KAAd,EAAqB,OAAK/D,QAA1B,CAAJ,EAAyC;AACrC+D,0BAAMG,SAAN,GAAkB,IAAlB;AACA,2BAAKlE,QAAL,CAAcF,MAAd,IAAwBiE,MAAMK,MAA9B;AACH;;AAED,oBAAIL,MAAMG,SAAV,EAAqB;AAAE;AACnB,wBAAIG,QAAQ,OAAKnE,MAAL,CAAYoE,OAAZ,CAAoBP,KAApB,CAAZ;AACA,wBAAIM,QAAQ,CAAC,CAAb,EAAgB,OAAKnE,MAAL,CAAYqE,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACnB;AACJ,aAjBD;;AAmBA;AACA,gBAAIG,OAAO,KAAKC,QAAL,CAAc,IAAIhE,IAAJ,EAAd,EAA0B,KAAKJ,cAA/B,EAA+CqE,EAA1D;AACAC,8BAAmBH,uCAAD,GAAiC,CAAC,mCAAwBA,IAAzB,IAAiC,EAAlE,GAAuE,CAAzF;;AAEA;AACA,gBAAIA,2CAAiC,iBAAW,KAAK9D,KAAhB,EAAuB8D,IAAvB,GAA8B,EAA9B,GAAmC,IAApC,GAA4CA,IAA5C,mCAApC,EAA8G;AAC1GG,kCAAkB,CAAC,oCAA0B,iBAAW,KAAKjE,KAAhB,EAAuB8D,IAAvB,GAA8B,EAA9B,GAAmC,IAApC,GAA4CA,IAArE,CAAD,IAA+E,EAAjG;AACA,oBAAIG,kDAAJ,EAA6CA;AAChD;;AAED;AACA,gBAAIC,OAAOhB,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB,IAA1B,IAAkCF,eAA7C;AACA,gBAAIC,QAAQ,KAAKE,WAAL,CAAiB,iBAAW,KAAKpE,KAAhB,EAAuBqD,KAAvB,CAA6BgB,YAA9C,CAAZ,EAAyE;AACrE,oBAAIhB,QAAQ,oBAAU,IAAV,CAAZ;AACAA,sBAAMf,QAAN;AACA,qBAAK9C,MAAL,CAAY6C,IAAZ,CAAiBgB,KAAjB;AACH;AACJ;;;;;AAED;;;4CAGoB;AAAA;;AAChB,gBAAIiB,OAAQ,KAAKP,QAAL,CAAc,IAAIhE,IAAJ,EAAd,EAA0B,KAAKD,YAA/B,EAA6CkE,EAA7C,GAAkD,KAAKnE,cAAnE;AACA,gBAAI0E,WAAW,KAAf,CAFgB,CAEM;AACtB,gBAAID,IAAJ,EAAU,KAAKxE,YAAL,GAAoB,IAAIC,IAAJ,EAApB;;AAEV;AACAmE,mBAAOhB,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,IAA3B,IAAmC,CAA1C;AACA,gBAAID,QAAQ,KAAKE,WAAL,CAAiB,iBAAW,KAAKpE,KAAhB,EAAuByE,IAAvB,CAA4BJ,YAA7C,CAAR,IAAsEC,IAA1E,EAAgF;AAC5E,qBAAKpE,aAAL,CAAmBmC,IAAnB,CAAwB,mBAAS,IAAT,CAAxB;AACAkC,2BAAW,IAAX;AACH;;AAED;AACAL,mBAAOhB,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,IAA3B,IAAmC,CAA1C;AACA,gBAAID,QAAQ,KAAKE,WAAL,CAAiB,iBAAW,KAAKpE,KAAhB,EAAuB0E,WAAvB,CAAmCL,YAApD,CAAR,IAA6EC,IAA7E,IAAqF,CAACC,QAA1F,EAAoG;AAChG,qBAAKrE,aAAL,CAAmBmC,IAAnB,CAAwB,0BAAgB,IAAhB,CAAxB;AACAkC,2BAAW,IAAX;AACH;;AAED;AACAL,mBAAOhB,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,IAA3B,IAAmC,CAA1C;AACA,gBAAID,QAAQ,KAAKE,WAAL,CAAiB,iBAAW,KAAKpE,KAAhB,EAAuB2E,cAAvB,CAAsCN,YAAvD,CAAR,IAAgFC,IAAhF,IAAwF,CAACC,QAA7F,EAAuG;AACnG,qBAAKrE,aAAL,CAAmBmC,IAAnB,CAAwB,6BAAmB,IAAnB,CAAxB;AACAkC,2BAAW,IAAX;AACH;;AAED;AACA,iBAAKrE,aAAL,CAAmBQ,OAAnB,CAA2B,UAACkE,GAAD,EAAS;AAChC,wBAAQA,IAAIC,IAAZ;AACI;AACI,+BAAKlG,GAAL,CAASkE,SAAT,CAAmB,OAAKtD,OAAL,CAAakF,IAAhC,EAAsCG,IAAI7F,CAA1C,EAA6C6F,IAAI3F,CAAjD;AACA;AACJ;AACI,+BAAKN,GAAL,CAASkE,SAAT,CAAmB,OAAKtD,OAAL,CAAauF,OAAhC,EAAyCF,IAAI7F,CAA7C,EAAgD6F,IAAI3F,CAApD;AACA;AACJ;AACI,+BAAKN,GAAL,CAASkE,SAAT,CAAmB,OAAKtD,OAAL,CAAawF,OAAhC,EAAyCH,IAAI7F,CAA7C,EAAgD6F,IAAI3F,CAApD;AACA;AATR;;AAYA,oBAAI,OAAKsE,QAAL,CAAcqB,GAAd,EAAmB,OAAK9F,KAAxB,CAAJ,EACI8F,IAAII,OAAJ;;AAEJ,oBAAIJ,IAAIpB,SAAR,EAAmB;AACf,wBAAIG,QAAQ,OAAKzD,aAAL,CAAmB0D,OAAnB,CAA2BgB,GAA3B,CAAZ;AACA,wBAAIjB,QAAQ,CAAC,CAAb,EAAgB,OAAKzD,aAAL,CAAmB2D,MAAnB,CAA0BF,KAA1B,EAAiC,CAAjC;AACnB;AACJ,aApBD;AAqBH;;;;;AAED;;;gCAGQ;AACJ,iBAAKhF,GAAL,CAAS8C,SAAT,GAAqB,OAArB;AACA,iBAAK9C,GAAL,CAAS+C,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKhD,MAAL,CAAYQ,KAAZ,mBAAxB,EAAmD,KAAKR,MAAL,CAAYS,MAAZ,mBAAnD;AACA,iBAAK8F,WAAL;AACA,iBAAKtG,GAAL,CAAS8C,SAAT,GAAqB,OAArB;AACA,iBAAK9C,GAAL,CAASgD,IAAT,GAAgB,YAAhB;AACA,iBAAKhD,GAAL,CAASiD,SAAT,GAAqB,QAArB;AACA,iBAAKjD,GAAL,CAASuG,QAAT,CAAkB,SAAlB,EAA6B,KAAKxG,MAAL,CAAYQ,KAAZ,sBAA4B,CAAzD,EAA4D,KAAKR,MAAL,CAAYS,MAAZ,sBAA6B,CAAzF;AACA,iBAAKR,GAAL,CAASgD,IAAT,GAAgB,YAAhB;AACA,iBAAKhD,GAAL,CAASwG,SAAT,GAAqB,MAArB;AACA,iBAAKxG,GAAL,CAASuG,QAAT,CAAkB,2CAAlB,EAA+D,KAAKxG,MAAL,CAAYQ,KAAZ,sBAA4B,CAA3F,EAA8F,KAAKR,MAAL,CAAYS,MAAZ,sBAA6B,CAA7B,GAAiC,EAA/H;AACA,iBAAKiG,SAAL,CAAe,IAAf;;AAEA,gBAAI,CAAC,KAAKjD,OAAV,EAAmB;AACf,qBAAKzD,MAAL,CAAYsC,KAAZ,CAAkB,QAAlB,IAA8B,MAA9B;AACA,oBAAIqE,OAAO,IAAItF,IAAJ,KAAa,KAAKH,SAA7B;AACA,qBAAKD,cAAL,CAAoB2F,eAApB,CAAoCD,IAApC;AACA,qBAAK1C,IAAL;AACA;AACH;AACDvF,6BAAiB,KAAKmI,KAAtB,EAA6B,KAAK7G,MAAlC;AACH;;;;;AAED;;;+BAGO;AACH,gBAAI8G,gBAAJ;AAAA,gBAAa/H,iBAAb;AAAA,gBAAuBgI,iBAAvB;;AAEA,gBAAI,KAAKtD,OAAT,EAAkB;AACd,qBAAKzD,MAAL,CAAYsC,KAAZ,CAAkB,QAAlB,IAA8B,SAA9B;AACA,qBAAKpB,SAAL,GAAiB,IAAIG,IAAJ,EAAjB;AACA,qBAAKwF,KAAL;AACA;AACH;;AAED,gBAAI,CAAC,KAAKrD,MAAV,EACI;;AAEJ,gBAAI,KAAK6B,QAAL,CAAc,IAAIhE,IAAJ,EAAd,EAA0B,KAAKL,cAA/B,EAA+CsE,EAA/C,GAAoD,KAAKvE,eAA7D,EAA8E;AAC1E,qBAAKiG,cAAL;AACA,qBAAKT,WAAL;AACA,qBAAKU,iBAAL;AACA,qBAAKC,WAAL;AACA,qBAAKR,SAAL;AACA,qBAAK1F,cAAL,GAAsB,IAAIK,IAAJ,EAAtB;AACH;;AAED,gBAAI,KAAKjB,KAAL,CAAWM,MAAX,IAAqB,CAArB,IAA0B,KAAKE,QAAL,CAAcF,MAAd,IAAwB,CAAtD,EAAyD;AACrD;AACA,qBAAK8C,MAAL,GAAc,KAAd;AACA,qBAAKC,OAAL,GAAe,KAAf;AACA;AACA,qBAAK0D,mBAAL;AACAL,0BAAU,CAAE,KAAK1G,KAAL,CAAWM,MAAX,IAAqB,CAAtB,GAA2B,kBAA3B,GAAgD,qBAAjD,IAA0E,SAA1E,GAAsF,KAAKa,KAA3F,GAAmG,SAA7G;AACA,qBAAKyC,MAAL,CAAY8C,OAAZ,EAAqB,IAArB,EAA2B,KAAKlE,IAAhC;AACA,qBAAKrB,KAAL,GAAc,KAAKA,KAAL,GAAa,CAAd,GAAmBiD,KAAKsB,KAAL,CAAW,KAAKvE,KAAL,GAAa,CAAxB,CAAnB,GAAgD,CAA7D,CARqD,CAQW;AAChE;AACH;;AAED,gBAAI,KAAK8D,QAAL,CAAc,IAAIhE,IAAJ,EAAd,EAA0B,KAAKJ,cAA/B,EAA+CqE,EAA/C,GAAoD,iBAAW,KAAKhE,KAAhB,EAAuB8D,IAAvB,GAA8B,EAA9B,GAAmC,IAA3F,EAAiG;AAC7F,qBAAK5B,MAAL,GAAc,KAAd;AACA,qBAAKC,OAAL,GAAe,KAAf;;AAGA,oBAAI,KAAKnC,KAAL,GAAa,iBAAW8F,MAA5B,EAAoC;AAChCN,8BAAU,kBAAV;AACA/H,+BAAW,KAAKsI,IAAhB;AACAN,+BAAW,IAAX;AACA,yBAAKzF,KAAL;AACH,iBALD,MAKO;AACHwF,8BAAU,yDAAyD,KAAKvF,KAAxE;AACAxC,+BAAW,KAAK6D,IAAhB;AACAmE,+BAAW,IAAX;AACA,yBAAKzF,KAAL,GAAa,CAAb;AACH;;AAED,qBAAK0C,MAAL,CAAY8C,OAAZ,EAAqBC,QAArB,EAA+BhI,QAA/B;AACA;AACH;;AAEDL,6BAAiB,KAAKuF,IAAtB,EAA4B,KAAKjE,MAAjC;AACH;;;;;AAED;;;8CAGsB;AAClB,iBAAKA,MAAL,CAAYsH,mBAAZ,CAAgC,OAAhC,EAAyC,KAAKjE,OAA9C,EAAuD,KAAvD;AACA,iBAAKrD,MAAL,CAAYsH,mBAAZ,CAAgC,aAAhC,EAA+C,KAAK/D,aAApD,EAAmE,KAAnE;AACA,iBAAKvD,MAAL,CAAYsH,mBAAZ,CAAgC,WAAhC,EAA6C,KAAKxD,WAAlD,EAA+D,KAA/D;AACA,iBAAK9D,MAAL,CAAYsH,mBAAZ,CAAgC,UAAhC,EAA4C,KAAKvD,UAAjD,EAA6D,KAA7D;AACA,iBAAK/D,MAAL,CAAYsH,mBAAZ,CAAgC,OAAhC,EAAyC,KAAKzD,OAA9C,EAAuD,KAAvD;AACH;;;;;AAED;;;;oCAIY0D,K,EAAO;AACf,iBAAKnH,KAAL,CAAWC,CAAX,GAAe,CAACkH,MAAMC,KAAN,GAAc,KAAKxH,MAAL,CAAYyH,UAA1B,GAAuC,EAAxC,oBAAf;AACA,iBAAKrH,KAAL,CAAWG,CAAX,GAAe,CAACgH,MAAMG,KAAN,GAAc,KAAK1H,MAAL,CAAY2H,SAA1B,GAAsC,EAAvC,oBAAf;AACH;;;;;AAED;;;;mCAIWJ,K,EAAO;AACd,iBAAK9D,OAAL,GAAe,IAAf;AACH;;;;;AAED;;;;gCAIQ8D,K,EAAO;AACX,gBAAI,KAAK/D,MAAL,IAAe,CAAC,KAAKC,OAAzB,EAAkC;AAC9B,qBAAKmE,UAAL,GAD8B,CACX;AACtB;;AAED,gBAAI,CAAC,KAAKpE,MAAN,IAAgB,CAAC,KAAKC,OAA1B,EAAmC;AAC/B,qBAAK4D,IAAL;AACH;AACJ;;;;;AAED;;;;gCAIQE,K,EAAO;AACX,gBAAIA,MAAMM,OAAN,6BAA+B,CAAC,KAAKpE,OAAzC,EAAkD;AAC9C,qBAAKD,MAAL,GAAc,KAAd;AACA,qBAAKC,OAAL,GAAe,KAAf;AACA;AACA,qBAAKlC,KAAL,GAAa,CAAb;AACA,qBAAKD,KAAL,GAAa,CAAb;AACA,qBAAK6F,mBAAL;AACA,qBAAKnD,MAAL,CAAY,WAAZ,EAAyB,IAAzB,EAA+B,KAAKpB,IAApC;AACH;AACJ;;;;;AAED;;;;;sCAKc2E,K,EAAO;AACjB,gBAAI,KAAK/D,MAAL,IAAe,CAAC,KAAKC,OAAzB,EAAkC;AAC9B,qBAAKA,OAAL,GAAe,IAAf;AACH,aAFD,MAEO,IAAI,KAAKD,MAAL,IAAe,KAAKC,OAAxB,EAAiC;AACpC,qBAAKA,OAAL,GAAe,KAAf;AACH;AACD8D,kBAAMO,cAAN;AACA,mBAAO,KAAP;AACH;;AAED;;;;;;;;;iCAMSC,K,EAAOC,K,EAAO;AACnB;AACA;AACA,gBAAMrB,OAAO,EAAb;AACAA,iBAAKrB,EAAL,GAAWyC,QAAQC,KAAnB;AACArB,iBAAKsB,IAAL,GAAYzD,KAAKsB,KAAL,CAAWa,KAAKrB,EAAL,GAAU,QAArB,CAAZ;AACAqB,iBAAKuB,KAAL,GAAa1D,KAAKsB,KAAL,CAAYa,KAAKrB,EAAL,GAAU,QAAX,GAAuB,OAAlC,CAAb;AACAqB,iBAAKwB,OAAL,GAAe3D,KAAKsB,KAAL,CAAaa,KAAKrB,EAAL,GAAU,QAAX,GAAuB,OAAxB,GAAmC,KAA9C,CAAf;AACAqB,iBAAKyB,OAAL,GAAeC,SAAS,CAACN,MAAMO,OAAN,KAAkBN,MAAMM,OAAN,EAAnB,IAAsC,IAA/C,CAAf;AACA,mBAAO3B,IAAP;AACH;;;;;AAED;;;;;;iCAMS4B,I,EAAMC,I,EAAM;AACjB,gBAAIC,WAAJ;AAAA,gBAAQC,WAAR;AAAA,gBAAYC,WAAZ;AAAA,gBAAgBC,WAAhB,CADiB,CACG;AACpB,gBAAIC,WAAJ;AAAA,gBAAQC,WAAR;AAAA,gBAAYC,WAAZ;AAAA,gBAAgBC,WAAhB,CAFiB,CAEG;;AAEpBP,iBAAKF,KAAKlI,CAAV;AACAqI,iBAAKH,KAAKhI,CAAV;AACAoI,iBAAKJ,KAAK/H,KAAV;AACAoI,iBAAKL,KAAK9H,MAAV;;AAEAwI,iBAAKT,KAAKnI,CAAV;AACA6I,iBAAKV,KAAKjI,CAAV;AACA4I,iBAAKX,KAAKhI,KAAV;AACA4I,iBAAKZ,KAAK/H,MAAV;;AAEA;AACA,mBAAQ,CAAEgI,KAAKQ,EAAL,IAAYR,KAAKE,EAAN,GAAYM,EAAxB,IACDR,KAAKQ,EAAL,IAAYR,KAAKE,EAAN,GAAaM,KAAKE,EAD5B,IAEDV,KAAKQ,EAAL,IAAWR,KAAMQ,KAAKE,EAFtB,MAGFT,KAAKQ,EAAL,IAAYR,KAAKE,EAAN,GAAYM,EAAxB,IACOR,KAAKQ,EAAL,IAAYR,KAAKE,EAAN,GAAaM,KAAKE,EADpC,IAEOV,KAAKQ,EAAL,IAAWR,KAAMQ,KAAKE,EAL1B,CAAD,GAMD,IANC,GAMM,KANb;AAOH;;;;;AAED;;;;kCAIU3F,O,EAAS;AACf,gBAAI4F,WAAY,CAAC5F,OAAF,GAAa,IAAIpC,IAAJ,EAAb,GAA0B,KAAKL,cAA9C;AACA,gBAAIoE,OAAO,KAAKC,QAAL,CAAcgE,QAAd,EAAwB,KAAKpI,cAA7B,CAAX;AACA,gBAAI0F,OAAO,IAAItF,IAAJ,CAAU,iBAAW,KAAKC,KAAhB,EAAuB8D,IAAvB,GAA8B,EAA9B,GAAmC,IAApC,GAA4CA,KAAKE,EAA1D,CAAX;AACA,gBAAI6C,UAAWxB,KAAK2C,UAAL,KAAoB,EAArB,GAA2B,MAAM3C,KAAK2C,UAAL,EAAjC,GAAqD3C,KAAK2C,UAAL,EAAnE;AACA,gBAAIlB,UAAWzB,KAAK4C,UAAL,KAAoB,EAArB,GAA2B,MAAM5C,KAAK4C,UAAL,EAAjC,GAAqD5C,KAAK4C,UAAL,EAAnE;;AAEA,iBAAKtJ,GAAL,CAASiD,SAAT,GAAqB,MAArB;AACA,iBAAKjD,GAAL,CAASgD,IAAT,GAAgB,wBAAa,UAA7B;AACA,iBAAKhD,GAAL,CAAS8C,SAAT,GAAqB,SAArB;;AAEA,iBAAK9C,GAAL,CAASuG,QAAT,CAAkB,YAAY,KAAKlF,KAAL,GAAa,CAAzB,CAAlB,EAA+C,qBAA/C,EAA2D,qBAA3D;AACA,iBAAKrB,GAAL,CAASuG,QAAT,CAAkB,UAAU2B,OAAV,GAAoB,GAApB,GAA0BC,OAA5C,EAAqD,qBAArD,EAAiE,qBAAjE,EAZe,CAY+D;AAC9E,iBAAKnI,GAAL,CAASuG,QAAT,CAAkB,WAAW,KAAKjF,KAAlC,EAAyC,qBAAzC,EAAqD,qBAArD,EAbe,CAamD;;AAElE,iBAAKtB,GAAL,CAASiD,SAAT,GAAqB,OAArB;AACA,iBAAKjD,GAAL,CAASqE,SAAT,GAAqB,GAArB;AACA,gBAAIkF,SAAS,KAAKC,WAAL,CAAiB,KAAKrJ,KAAL,CAAWM,MAA5B,EAAoC+C,OAApC,CAAb;AACA,gBAAIiG,SAAS,KAAKD,WAAL,CAAiB,KAAK7I,QAAL,CAAcF,MAA/B,EAAuC+C,OAAvC,CAAb;;AAEA,iBAAKxD,GAAL,CAAS8C,SAAT,GAAqByG,MAArB;AACA,iBAAKvJ,GAAL,CAASuG,QAAT,CAAkB,WAAW,KAAKpG,KAAL,CAAWM,MAAtB,GAA+B,GAAjD,EAAsD,CAAC,KAAKV,MAAL,CAAYQ,KAAZ,GAAoB,EAArB,oBAAtD,EAAwF,qBAAxF,EArBe,CAqBsF;AACrG,iBAAKP,GAAL,CAAS8C,SAAT,GAAqB2G,MAArB;AACA,iBAAKzJ,GAAL,CAASuG,QAAT,CAAkB,cAAc,KAAK5F,QAAL,CAAcF,MAA5B,GAAqC,GAAvD,EAA4D,CAAC,KAAKV,MAAL,CAAYQ,KAAZ,GAAoB,EAArB,oBAA5D,EAA8F,qBAA9F,EAvBe,CAuB4F;;AAE3GgJ,qBAAS,KAAKC,WAAL,CAAiB,KAAKrJ,KAAL,CAAWM,MAA5B,EAAoC+C,OAApC,EAA6C,IAA7C,CAAT;AACAiG,qBAAS,KAAKD,WAAL,CAAiB,KAAK7I,QAAL,CAAcF,MAA/B,EAAuC+C,OAAvC,EAAgD,IAAhD,CAAT;;AAEA,iBAAKxD,GAAL,CAASoE,WAAT,GAAuBmF,MAAvB;AACA,iBAAKvJ,GAAL,CAAS0J,UAAT,CAAoB,CAAC,KAAK3J,MAAL,CAAYQ,KAAZ,GAAoB,GAArB,oBAApB,EAAuD,EAAvD,EAA2D,GAA3D,EAAgE,EAAhE;AACA,iBAAKP,GAAL,CAAS8C,SAAT,GAAqByG,MAArB;AACA,iBAAKvJ,GAAL,CAAS+C,QAAT,CAAkB,CAAC,KAAKhD,MAAL,CAAYQ,KAAZ,GAAoB,GAArB,oBAAlB,EAAqD,EAArD,EAAyD,KAAKJ,KAAL,CAAWM,MAAX,GAAoB,GAApB,GAA0B,GAAnF,EAAwF,EAAxF;;AAEA,iBAAKT,GAAL,CAASoE,WAAT,GAAuBqF,MAAvB;AACA,iBAAKzJ,GAAL,CAAS0J,UAAT,CAAoB,CAAC,KAAK3J,MAAL,CAAYQ,KAAZ,GAAoB,GAArB,oBAApB,EAAuD,EAAvD,EAA2D,GAA3D,EAAgE,EAAhE;AACA,iBAAKP,GAAL,CAAS8C,SAAT,GAAqB2G,MAArB;AACA,iBAAKzJ,GAAL,CAAS+C,QAAT,CAAkB,CAAC,KAAKhD,MAAL,CAAYQ,KAAZ,GAAoB,GAArB,oBAAlB,EAAqD,EAArD,EAAyD,KAAKI,QAAL,CAAcF,MAAd,GAAuB,GAAvB,GAA6B,GAAtF,EAA2F,EAA3F;AACH;;;;;AAED;;;;;;;oCAOYkJ,K,EAAOnG,O,EAASoG,M,EAAQ;AAChC,gBAAIC,cAAJ;;AAEA,gBAAIF,QAAQ,EAAZ,EACIE,QAAS,CAACrG,OAAD,IAAYoG,MAAb,GAAuB,yBAAvB,GAAmD,SAA3D,CADJ,CAC0E;AAD1E,iBAEK,IAAID,QAAQ,EAAZ,EACDE,QAAS,CAACrG,OAAD,IAAYoG,MAAb,GAAuB,yBAAvB,GAAmD,SAA3D,CADC,CACqE;AADrE,qBAEA,IAAID,QAAQ,EAAZ,EACDE,QAAS,CAACrG,OAAD,IAAYoG,MAAb,GAAuB,yBAAvB,GAAmD,SAA3D,CADC,CACqE;AADrE,yBAGDC,QAAS,CAACrG,OAAD,IAAYoG,MAAb,GAAuB,wBAAvB,GAAkD,SAA1D,CAV4B,CAUyC;;AAEzE,mBAAOC,KAAP;AACH;;;;;AAED;;;qCAGa;AAAA;;AACT,gBAAI,KAAKrI,QAAT,EAAmB,OAAO,KAAP;;AAEnB,iBAAKA,QAAL,GAAgB,IAAhB;AACA,gBAAIsI,iBAAiBC,YAAY,YAAM;AACnC,uBAAKtI,mBAAL;AACA,uBAAKF,aAAL,CAAmBQ,OAAnB,CAA2B,UAACkE,GAAD,EAAS;AAChC+D,+BAAWzF,KAAK0F,IAAL,CAAU1F,KAAK2F,GAAL,CAAU,OAAK/J,KAAL,CAAWC,CAAX,GAAe,EAAf,GAAoB6F,IAAI7F,CAAlC,EAAsC,CAAtC,IAA2CmE,KAAK2F,GAAL,CAAU,OAAK/J,KAAL,CAAWG,CAAX,GAAe,EAAf,GAAoB2F,IAAI3F,CAAlC,EAAsC,CAAtC,CAArD,CAAX;AACA,wBAAI0J,YAAY,OAAKvI,mBAArB,EAA0C;AACtCwE,4BAAIpB,SAAJ,GAAgB,IAAhB;AACA,4BAAIoB,IAAIC,IAAJ,4BAAJ,EAA+B,OAAK5E,KAAL;AAClC;AACJ,iBAND;AAOA,oBAAI,OAAKG,mBAAL,IAA4B,OAAKtB,KAAL,CAAWO,YAA3C,EAAyD;AACrDyJ,kCAAcL,cAAd;AACA,2BAAKrI,mBAAL,GAA2B,CAA3B;AACA,2BAAKD,QAAL,GAAgB,KAAhB;AACH;AACJ,aAdoB,EAclB,CAdkB,CAArB;AAeH;;;;;AAED;;;;;;+BAMO4I,I,EAAMtD,Q,EAAUhI,Q,EAAU;AAAA;;AAC7B,gBAAIuL,gBAAgB,IAAIjJ,IAAJ,EAApB;AACA,gBAAIkJ,mBAAmB,SAAnBA,gBAAmB,GAAM;AACzB,uBAAKtK,GAAL,CAAS8C,SAAT,GAAqB,OAArB;AACA,uBAAK9C,GAAL,CAAS+C,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,OAAKhD,MAAL,CAAYQ,KAAZ,mBAAxB,EAAmD,OAAKR,MAAL,CAAYS,MAAZ,mBAAnD;AACA,uBAAKR,GAAL,CAAS8C,SAAT,GAAqB,OAArB;AACA,uBAAK9C,GAAL,CAASgD,IAAT,GAAgB,YAAhB;AACA,uBAAKhD,GAAL,CAASiD,SAAT,GAAqB,QAArB;AACA,uBAAKjD,GAAL,CAASuG,QAAT,CAAkB6D,IAAlB,EAAwB,OAAKrK,MAAL,CAAYQ,KAAZ,sBAA4B,CAApD,EAAuD,OAAKR,MAAL,CAAYS,MAAZ,sBAA6B,CAApF;;AAEA,oBAAI,OAAK4E,QAAL,CAAc,IAAIhE,IAAJ,EAAd,EAA0BiJ,aAA1B,EAAyChF,EAAzC,GAA8CyB,QAAlD,EAA4D;AAAE;AAC1D,wBAAIhI,QAAJ,EAAcA;AACd;AACH;;AAEDL,iCAAiB6L,gBAAjB,EAAmC,OAAKvK,MAAxC;AACH,aAdD;AAeAuK;AACH;;;;;AAED;;;;;oCAKYC,I,EAAM;AACd,mBAAQ,OAAOA,OAAO,EAAtB;AACH;;;;;AAED;;;sCAGc;AACV,iBAAKvK,GAAL,CAAS8C,SAAT,GAAqB,SAArB;AACA,iBAAK9C,GAAL,CAASgD,IAAT,GAAgB,WAAhB;AACA,iBAAKhD,GAAL,CAASiD,SAAT,GAAqB,OAArB;AACA,iBAAKjD,GAAL,CAASuG,QAAT,CAAkB,mBAAoB,IAAInF,IAAJ,GAAWoJ,WAAX,EAApB,GAAgD,uBAAlE,EAA2F,CAAC,KAAKzK,MAAL,CAAYQ,KAAZ,GAAoB,EAArB,oBAA3F,EAA6H,CAAC,KAAKR,MAAL,CAAYS,MAAZ,GAAqB,EAAtB,oBAA7H;AACH;;;;;AAED;;;;;;;;;iCASS4J,I,EAAMhK,C,EAAGE,C,EAAGmK,Q,EAAUC,U,EAAY;AACvC,gBAAIC,QAAQP,KAAKQ,KAAL,CAAW,GAAX,CAAZ;AACA,gBAAIC,OAAO,EAAX;;AAEA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,MAAMxD,MAA1B,EAAkC2D,GAAlC,EAAuC;AACnC,oBAAIC,WAAWF,OAAOF,MAAMG,CAAN,CAAP,GAAkB,GAAjC;AACA,oBAAIE,UAAU,KAAKhL,GAAL,CAASiL,WAAT,CAAqBF,QAArB,CAAd;AACA,oBAAIG,YAAYF,QAAQzK,KAAxB;AACA,oBAAI2K,YAAYT,QAAZ,IAAwBK,IAAI,CAAhC,EAAmC;AAC/B,yBAAK9K,GAAL,CAASuG,QAAT,CAAkBsE,IAAlB,EAAwBzK,CAAxB,EAA2BE,CAA3B;AACAuK,2BAAOF,MAAMG,CAAN,IAAW,GAAlB;AACAxK,yBAAKoK,UAAL;AACH,iBAJD,MAIO;AACHG,2BAAOE,QAAP;AACH;AACJ;AACD,iBAAK/K,GAAL,CAASuG,QAAT,CAAkBsE,IAAlB,EAAwBzK,CAAxB,EAA2BE,CAA3B;AACH;;;;;AAED;;;0CAGkB;AACd;AACA,iBAAKN,GAAL,CAASkE,SAAT,CAAmB,KAAKtD,OAAL,CAAauK,WAAhC,EAA6C,CAA7C,EAAgD,CAAhD;;AAEA;AACA,iBAAKnL,GAAL,CAASgD,IAAT,GAAgB,CAAC,qBAAD,EAAaoI,QAAb,KAA0B,cAA1C;AACA,iBAAKpL,GAAL,CAASiD,SAAT,GAAqB,QAArB;AACA,iBAAKjD,GAAL,CAAS8C,SAAT,GAAqB,MAArB;AACA,iBAAK9C,GAAL,CAASuG,QAAT,CAAkB,YAAlB,EAAgC,KAAKtG,EAArC,EAAyC,KAAKC,EAAL,GAAU,sBAAnD;AACA,iBAAKF,GAAL,CAASgD,IAAT,GAAgB,CAAC,qBAAD,EAAaoI,QAAb,KAA0B,cAA1C;AACA,iBAAKpL,GAAL,CAASuG,QAAT,CAAkB,gBAAlB,EAAoC,KAAKtG,EAAzC,EAA6C,KAAKC,EAAL,GAAU,sBAAvD;AACA,iBAAKH,MAAL,CAAYsC,KAAZ,CAAkB,QAAlB,IAA8B,SAA9B;AACH;;;;;;kBA5oBgBvC,U;;;;;;;;;;;;AC3BrB;AACO,IAAMuL,wBAAQ,CAAd;AACA,IAAMC,sCAAe,GAArB,C,CAA0B;AAC1B,IAAMC,wCAAgB,GAAtB,C,CAA2B;AAC3B,IAAMC,kCAAa,EAAnB;AACA,IAAMC,kCAAa,EAAnB;AACA,IAAMC,gDAAoB,EAA1B;AACA,IAAMC,sDAAuB,EAA7B;AACA,IAAMC,oCAAc,CAApB;AACA,IAAMC,sCAAe,CAArB;AACA,IAAMC,kCAAa,CAAnB;AACA,IAAMC,oCAAc,GAApB;AACA,IAAMC,wDAAwB,IAA9B;AACA,IAAMC,wCAAgB,MAAtB;AACA,IAAMC,8CAAmB,SAAzB;AACA,IAAMC,8CAAmB,SAAzB,C;;;;;;;;;;;;;kBCRQ,UAAUtM,UAAV,EAAsB;AACjC,SAAKuM,EAAL,GAAUvM,UAAV;AACA,SAAKO,CAAL;AACA,SAAKE,CAAL;AACA,SAAK+L,CAAL,CAJiC,CAIzB;AACR,SAAK9L,KAAL,GAAa,qBAAb;AACA,SAAKC,MAAL,GAAc,qBAAd;AACA,SAAK8L,MAAL,GAAc,iBAAW,KAAKF,EAAL,CAAQ/K,KAAnB,EAA0BqD,KAA1B,CAAgC6H,KAAhC,GAAwChI,KAAKiB,MAAL,EAAtD;AACA,SAAKgH,MAAL,GAAc,iBAAW,KAAKJ,EAAL,CAAQ/K,KAAnB,EAA0BqD,KAA1B,CAAgC6H,KAAhC,GAAwChI,KAAKiB,MAAL,EAAtD;AACA,SAAKT,MAAL,GAAcR,KAAKkI,KAAL,CAAWlI,KAAKiB,MAAL,KAAgB,iBAAW,KAAK4G,EAAL,CAAQ/K,KAAnB,EAA0BqD,KAA1B,CAAgCK,MAA3D,CAAd;AACA,SAAK2H,GAAL,GAAW,qBAAX,CAViC,CAUV;AACvB,SAAK7H,SAAL,GAAiB,KAAjB;;AAEA,SAAKlB,QAAL,GAAgB,YAAY;AACxB,YAAIgJ,aAAapI,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB,CAA1B,CAAjB;;AAEA,gBAAQmH,UAAR;AACI,iBAAK,CAAL;AAAQ;AACJ,qBAAKrM,CAAL,GAAS,CAAC,CAAD,GAAK,KAAKoM,GAAnB;AACA,qBAAKtM,CAAL,GAASmE,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB3F,WAAWE,MAAX,CAAkBQ,KAA5C,CAAT;AACA,oBAAI,KAAKH,CAAL,GAAS,KAAKgM,EAAL,CAAQrM,MAAR,CAAeQ,KAAf,GAAuB,CAApC,EAAuC,KAAK+L,MAAL,GAAc,CAAC,CAAD,GAAK,KAAKA,MAAxB;AACvC,qBAAKE,MAAL,GAAc,CAAC,CAAD,GAAK,KAAKA,MAAxB;AACA;AACJ,iBAAK,CAAL;AAAQ;AACJ,qBAAKpM,CAAL,GAASP,WAAWE,MAAX,CAAkBQ,KAAlB,GAA0B,KAAKmM,GAAxC;AACA,qBAAKpM,CAAL,GAASiE,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB3F,WAAWE,MAAX,CAAkBS,MAA5C,CAAT;AACA,oBAAI,KAAKF,CAAL,GAAS,KAAK8L,EAAL,CAAQrM,MAAR,CAAeS,MAAf,GAAwB,CAArC,EAAwC,KAAKgM,MAAL,GAAc,CAAC,CAAD,GAAK,KAAKA,MAAxB;AACxC,qBAAKF,MAAL,GAAc,CAAC,CAAD,GAAK,KAAKA,MAAxB;AACA;AACJ,iBAAK,CAAL;AAAS;AACL,qBAAKhM,CAAL,GAAST,WAAWE,MAAX,CAAkBS,MAAlB,GAA2B,KAAKkM,GAAzC;AACA,qBAAKtM,CAAL,GAASmE,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB3F,WAAWE,MAAX,CAAkBQ,KAA5C,CAAT;AACA,oBAAI,KAAKH,CAAL,GAAS,KAAKgM,EAAL,CAAQrM,MAAR,CAAeQ,KAAf,GAAuB,CAApC,EAAuC,KAAK+L,MAAL,GAAc,CAAC,CAAD,GAAK,KAAKA,MAAxB;AACvC;AACJ,iBAAK,CAAL;AAAQ;AACJ,qBAAKlM,CAAL,GAAS,CAAC,CAAD,GAAK,KAAKsM,GAAnB;AACA,qBAAKpM,CAAL,GAASiE,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB3F,WAAWE,MAAX,CAAkBS,MAA5C,CAAT;AACA,oBAAI,KAAKF,CAAL,GAAS,KAAK8L,EAAL,CAAQrM,MAAR,CAAeS,MAAf,GAAwB,CAArC,EAAwC,KAAKgM,MAAL,GAAc,CAAC,CAAD,GAAK,KAAKA,MAAxB;AArBhD;;AAwBA,aAAKH,CAAL,GAAS9H,KAAKiB,MAAL,KAAgB,CAAzB;AACH,KA5BD;;AA8BA,SAAKb,IAAL,GAAY,YAAY;AACpB;AACA,aAAKvE,CAAL,IAAU,KAAKiM,CAAL,GAAS9H,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB,KAAK8G,MAA/B,CAAT,GAAkD/H,KAAKsB,KAAL,CAAW,KAAKyG,MAAL,GAAc,CAAzB,CAA5D;AACA,aAAKhM,CAAL,IAAU,KAAK+L,CAAL,GAAS9H,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB,KAAKgH,MAA/B,CAAT,GAAkDjI,KAAKsB,KAAL,CAAW,KAAK2G,MAAL,GAAc,CAAzB,CAA5D;;AAEA;AACA,aAAKI,UAAL;;AAEA;AACA,aAAKR,EAAL,CAAQpM,GAAR,CAAYkE,SAAZ,CAAsB,KAAKkI,EAAL,CAAQxL,OAAR,CAAgB8D,KAAtC,EAA6C,KAAKtE,CAAlD,EAAqD,KAAKE,CAA1D;AACH,KAVD;;AAYA,SAAKsM,UAAL,GAAkB,YAAY;AAC1B;AACA;AACA;AACA,YAAIC,OAAOtI,KAAKuI,GAAL,CAASvI,KAAK0F,IAAL,CAAU1F,KAAK2F,GAAL,CAAS,KAAK9J,CAAL,GAAS,KAAKgM,EAAL,CAAQnM,EAA1B,EAA8B,CAA9B,IAAmCsE,KAAK2F,GAAL,CAAS,KAAK5J,CAAL,GAAS,KAAK8L,EAAL,CAAQlM,EAA1B,EAA8B,CAA9B,CAA7C,CAAT,CAAX;AACA,YAAI2M,OAAQ,KAAKT,EAAL,CAAQrM,MAAR,CAAeQ,KAA3B,EACI,KAAKsE,SAAL,GAAiB,IAAjB;AACP,KAPD;AAQH,C;;AAtED;;AACA;;;;;;AAqEC;;AAnED;;;;;;;;;;;;;;;;kBCGe,UAAUhF,UAAV,EAAsB;AACjC,SAAKuM,EAAL,GAAUvM,UAAV;AACA,SAAKqG,IAAL,GAAY+F,aAAZ;AACA,SAAKpC,KAAL,GAAa,SAAb;AACA,SAAKzJ,CAAL,GAASmE,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,KAAK4G,EAAL,CAAQrM,MAAR,CAAeQ,KAA/B,mBAAX,CAAT;AACA,SAAKD,CAAL,GAASiE,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,KAAK4G,EAAL,CAAQrM,MAAR,CAAeS,MAA/B,mBAAX,CAAT;AACA,SAAKD,KAAL,GAAa,qBAAb;AACA,SAAKC,MAAL,GAAc,qBAAd;AACA,SAAKuE,MAAL,GAAc,EAAd,CARiC,CAQf;AAClB,SAAK4E,KAAL,GAAapF,KAAKO,IAAL,CAAUP,KAAKiB,MAAL,KAAgB,KAAKT,MAA/B,IAAyC,KAAKA,MAA3D;;AAEA,SAAKsB,OAAL,GAAe,YAAY;AACvB,aAAK+F,EAAL,CAAQjM,KAAR,CAAcM,MAAd,IAAwB,KAAKkJ,KAA7B;AACA,aAAK9E,SAAL,GAAiB,IAAjB;AACH,KAHD;AAIH,C;;AArBD;;AAqBC;;AAnBD;;;;;;;;;;;;;;;;kBCKe,UAAUhF,UAAV,EAAsB;AACjC,SAAKuM,EAAL,GAAUvM,UAAV;AACA,SAAKqG,IAAL,GAAYiG,gBAAZ;AACA,SAAKtC,KAAL,GAAa,SAAb;AACA,SAAKzJ,CAAL,GAASmE,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,KAAK4G,EAAL,CAAQrM,MAAR,CAAeQ,KAA/B,mBAAX,CAAT;AACA,SAAKD,CAAL,GAASiE,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,KAAK4G,EAAL,CAAQrM,MAAR,CAAeS,MAA/B,mBAAX,CAAT;AACA,SAAKD,KAAL,GAAa,qBAAb;AACA,SAAKC,MAAL,GAAc,qBAAd;AACA,SAAKC,MAAL,GAAc,EAAd,CARiC,CAQf;AAClB,SAAKkJ,KAAL,GAAapF,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,KAAK/E,MAAhC,IAA0C,KAAKA,MAA5D;;AAEA,SAAK4F,OAAL,GAAe,YAAY;AACvB,aAAK+F,EAAL,CAAQzL,QAAR,CAAiBF,MAAjB,IAA2B,KAAKkJ,KAAhC;AACA,YAAI,KAAKyC,EAAL,CAAQzL,QAAR,CAAiBF,MAAjB,GAA0B,iBAAW,KAAK2L,EAAL,CAAQ/K,KAAnB,EAA0BV,QAA1B,CAAmCF,MAAjE,EACI,KAAK2L,EAAL,CAAQzL,QAAR,CAAiBF,MAAjB,GAA0B,iBAAW,KAAK2L,EAAL,CAAQ/K,KAAnB,EAA0BV,QAA1B,CAAmCF,MAA7D;AACJ,aAAK2L,EAAL,CAAQ9K,KAAR,IAAiBuK,YAAjB;AACA,aAAKhH,SAAL,GAAiB,IAAjB;AACH,KAND;AAOH,C;;AAzBD;;AACA;;;;;;AAwBC;;AAtBD;;;;;;;;;;;;;;;ACHA;;;;;;;;kBAQe,CACX;AACI1C,QAAI,OADR;AAEIC,SAAK;AAFT,CADW,EAKX;AACID,QAAI,OADR;AAEIC,SAAK;AAFT,CALW,EASX;AACID,QAAI,MADR;AAEIC,SAAK;AAFT,CATW,EAaX;AACID,QAAI,SADR;AAEIC,SAAK;AAFT,CAbW,EAiBX;AACID,QAAI,SADR;AAEIC,SAAK;AAFT,CAjBW,EAqBX;AACID,QAAI,UADR;AAEIC,SAAK;AAFT,CArBW,EAyBX;AACID,QAAI,aADR;AAEIC,SAAK;AAFT,CAzBW,C;;;;;;;;;;;;;kBCDA,UAAUvC,UAAV,EAAsB;AACjC,SAAKuM,EAAL,GAAUvM,UAAV;AACA,SAAKqG,IAAL,GAAYgG,gBAAZ;AACA,SAAKrC,KAAL,GAAa,SAAb;AACA,SAAKhF,SAAL,GAAiB,KAAjB;AACA,SAAKzE,CAAL,GAASmE,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,KAAK4G,EAAL,CAAQrM,MAAR,CAAeQ,KAA/B,mBAAX,CAAT;AACA,SAAKD,CAAL,GAASiE,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,KAAK4G,EAAL,CAAQrM,MAAR,CAAeS,MAA/B,mBAAX,CAAT;AACA,SAAKD,KAAL,GAAa,qBAAb;AACA,SAAKC,MAAL,GAAc,qBAAd;AACA,SAAKC,MAAL,GAAc,EAAd,CATiC,CASf;AAClB,SAAKkJ,KAAL,GAAapF,KAAKsB,KAAL,CAAWtB,KAAKiB,MAAL,KAAgB,KAAK/E,MAAhC,IAA0C,KAAKA,MAA5D;;AAEA,SAAK4F,OAAL,GAAe,YAAY;AACvB,aAAK+F,EAAL,CAAQjM,KAAR,CAAcM,MAAd,IAAwB,KAAKkJ,KAA7B;AACA,YAAI,KAAKyC,EAAL,CAAQjM,KAAR,CAAcM,MAAd,GAAuB,iBAAW,KAAK2L,EAAL,CAAQ/K,KAAnB,EAA0BlB,KAA1B,CAAgCM,MAA3D,EACI,KAAK2L,EAAL,CAAQjM,KAAR,CAAcM,MAAd,GAAuB,iBAAW,KAAK2L,EAAL,CAAQ/K,KAAnB,EAA0BlB,KAA1B,CAAgCM,MAAvD;AACJ,aAAK2L,EAAL,CAAQ9K,KAAR,IAAiBuK,YAAjB;AACA,aAAKhH,SAAL,GAAiB,IAAjB;AACH,KAND;AAOH,C;;AA1BD;;AACA;;;;;;AAyBC;;AAvBD;;;;;;;;;;;;;;;;;ACHA;;AAEA;;;;;;;;kBAQe;AACX;AACA;AACIM,UAAM,CADV,EACa;AACTvC,gBAAY,UAFhB,EAE4B;AACxBzC,WAAO;AACHM,gBAAQ,GADL,EACU;AACbC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ,GADF,CACM;AADN,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ,EACe;AAClBxH,gBAAQ,EAFL,EAES;AACZW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc,EADZ,CACe;AADf,KAfV;AAkBIK,iBAAa;AACTL,sBAAc,EADL,CACQ;AADR,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc,EADF,CACK;AADL;AArBpB,CAFW;AA2BX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CA5BW;AAqDX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CAtDW;AA+EX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CAhFW;AAyGX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CA1GW;AAmIX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CApIW;AA6JX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CA9JW;AAuLX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CAxLW;AAiNX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CAlNW;AA2OX;AACA;AACIP,UAAM,CADV;AAEIvC,gBAAY,UAFhB;AAGIzC,WAAO;AACHM,gBAAQ,GADL;AAEHC,sBAAc;AAFX,KAHX;AAOIC,cAAU;AACNF,gBAAQ;AADF,KAPd;AAUIiE,WAAO;AACH6H,eAAO,oBADJ;AAEHxH,gBAAQ,EAFL;AAGHW,sBAAc,EAHX,CAGe;AAHf,KAVX;AAeII,UAAM;AACFJ,sBAAc;AADZ,KAfV;AAkBIK,iBAAa;AACTL,sBAAc;AADL,KAlBjB;AAqBIM,oBAAgB;AACZN,sBAAc;AADF;AArBpB,CA5OW,C","file":"spaceguard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 613ea15ec3d566eb1125","// Cross Browser requestAnimationFrame compatibility.\r\n// @link http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\nexport function requestAnimFrame() {\r\n    return window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        function (callback) {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n}\r\n\r\n// Check user agent device type.\r\n// @link http://stackoverflow.com/a/16755700/1718162\r\nexport default {\r\n    //mobile or desktop compatible event name, to be used with '.on' function\r\n    TOUCH_DOWN_EVENT_NAME: 'mousedown touchstart',\r\n    TOUCH_UP_EVENT_NAME: 'mouseup touchend',\r\n    TOUCH_MOVE_EVENT_NAME: 'mousemove touchmove',\r\n    TOUCH_DOUBLE_TAB_EVENT_NAME: 'dblclick dbltap',\r\n\r\n    isAndroid: function () {\r\n        return navigator.userAgent.match(/Android/i);\r\n    },\r\n    isBlackBerry: function () {\r\n        return navigator.userAgent.match(/BlackBerry/i);\r\n    },\r\n    isIOS: function () {\r\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n    },\r\n    isOpera: function () {\r\n        return navigator.userAgent.match(/Opera Mini/i);\r\n    },\r\n    isWindows: function () {\r\n        return navigator.userAgent.match(/IEMobile/i);\r\n    },\r\n    isMobile: function () {\r\n        return (this.isAndroid() || this.isBlackBerry() || this.isIOS() || this.isOpera() || this.isWindows());\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./scripts/Environment.js","import SpaceGuard from './SpaceGuard';\r\nimport {requestAnimFrame} from './Environment';\r\n\r\n// Initialize the game.\r\nwindow.requestAnimFrame = requestAnimFrame;\r\nwindow.spaceguard = new SpaceGuard();\n\n\n// WEBPACK FOOTER //\n// ./scripts/Init.js","import {\r\n    SCALE,\r\n    CANVAS_WIDTH,\r\n    CANVAS_HEIGHT,\r\n    KEY_ESCAPE,\r\n    COMET_SCORE,\r\n    SHIELD_SCORE,\r\n    BOMB_SCORE,\r\n    CREATION_BARRIER_STEP,\r\n    OBJ_TYPE_BOMB,\r\n    OBJ_TYPE_GSHIELD,\r\n    OBJ_TYPE_SSHIELD\r\n} from './Constants';\r\n\r\nimport Environment from './Environment';\r\nimport Comet from './Comet';\r\nimport Bomb from './Bomb';\r\nimport StarshipShield from './StarshipShield';\r\nimport GameSprites from './GameSprites';\r\nimport GuardShield from './GuardShield';\r\nimport GameLevels from './Levels';\r\n\r\n/**\r\n * Spaceguard\r\n *\r\n * Main game class that handles core operations and loops.\r\n */\r\nexport default class Spaceguard {\r\n    /**\r\n     * Class constructor.\r\n     */\r\n    constructor() {\r\n        this.canvas;\r\n        this.ctx;\r\n        this.cx; // center x & y\r\n        this.cy;\r\n        this.guard = {\r\n            x: undefined,\r\n            y: undefined,\r\n            width: 50 * SCALE,\r\n            height: 50 * SCALE,\r\n            shield: 100,\r\n            defuseRadius: 50\r\n        };\r\n        this.starship = {\r\n            x: undefined,\r\n            y: undefined,\r\n            width: 135 * SCALE,\r\n            height: 135 * SCALE,\r\n            shield: 100\r\n        };\r\n        this.sprites = {};\r\n        this.comets;\r\n        this.frameUpdateTime = 1000 / 60; // 60 fps\r\n        this.lastUpdateTime; // last time canvas was updated\r\n        this.levelStartTime; // level start time - the player needs to survive for some minutes until the level is finished\r\n        this.pauseTime; // Stores the paused time period.\r\n        this.randomRollTime = 3000;\r\n        this.lastRollTime = new Date();\r\n        this.level = 0; // level let starts from 0, not from 1 (due to array index base)\r\n        this.score = 0;\r\n        this.randomObjects = [];\r\n        this.onDefuse = false;\r\n        this.currentDefuseRadius = 0; // used for graphic display\r\n        this.spaceBackground;\r\n    }\r\n\r\n    /**\r\n     * Initialize game platform.\r\n     *\r\n     * @param {string} canvasId Canvas DOM element.\r\n     * @returns {object} Returns game instance.\r\n     */\r\n    initialize(canvasId) {\r\n        this.canvas = document.getElementById(canvasId);\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        // load image sprites\r\n        GameSprites.forEach((sprite) => {\r\n            // let sprite = GameSprites[i];\r\n            let img = document.createElement('img');\r\n            img.id = sprite.id;\r\n            img.src = sprite.src;\r\n            img.style.display = 'none';\r\n            document.body.appendChild(img);\r\n            this.sprites[sprite.id] = img; // store the element handle for later use\r\n\r\n            // draw main screen when the images are finished loading\r\n            if (img.id == 'introScreen' && !Environment.isMobile()) {\r\n                img.onload = () => {\r\n                    this.drawIntroScreen();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.load();\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Load needed resource files - display initial screen to user.\r\n     *\r\n     * @returns {object} Returns game instance.\r\n     */\r\n    load() {\r\n        // init canvas\r\n        this.canvas.width = CANVAS_WIDTH * SCALE;\r\n        this.canvas.height = CANVAS_HEIGHT * SCALE;\r\n        this.canvas.style.background = '#000';\r\n        this.cx = this.canvas.width / 2;\r\n        this.cy = this.canvas.height / 2;\r\n        this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        // Check if user agent is a mobile device.\r\n        if (Environment.isMobile()) {\r\n            this.ctx.fillStyle = '#000';\r\n            this.ctx.fillRect(0, 0, this.canvas.width * SCALE, this.canvas.height * SCALE);\r\n            this.ctx.fillStyle = '#fff';\r\n            this.ctx.font = '14pt Arial';\r\n            this.ctx.textAlign = 'center';\r\n            this.wrapText('Unfortunately Spaceguard cannot be played on mobile devices. Please try again from a desktop computer.',\r\n                (this.canvas.width / 2) * SCALE, (this.canvas.height / 2) * SCALE, 350 * SCALE, 25 * SCALE);\r\n            return;\r\n        }\r\n\r\n        this.drawIntroScreen();\r\n\r\n        // events\r\n        this.canvas.addEventListener('click', this.onClick.bind(this), false);\r\n        this.canvas.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Execute main game loop.\r\n     * @returns {object} Returns game instance.\r\n     */\r\n    game() {\r\n        // init game lets\r\n        this.onGame = true;\r\n        this.onPause = false;\r\n        this.levelStartTime = new Date();\r\n        this.lastUpdateTime = new Date();\r\n        this.randomObjects = [];\r\n        this.guard.x = this.cx;\r\n        this.guard.y = this.cy;\r\n        this.guard.shield = GameLevels[this.level].guard.shield;\r\n        this.guard.defuseRadius = GameLevels[this.level].guard.defuseRadius;\r\n        this.guard.img = document.getElementById('guard');\r\n        this.starship.x = this.cx - (this.starship.width / 2);\r\n        this.starship.y = this.cy - (this.starship.height / 2);\r\n        this.starship.shield = GameLevels[this.level].starship.shield;\r\n        this.starship.img = document.getElementById('starship');\r\n\r\n        // create comets\r\n        this.comets = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            this.comets.push(new Comet(this));\r\n            this.comets[i].position();\r\n        }\r\n\r\n        // add event listeners\r\n        this.canvas.addEventListener('keyup', this.onKeyUp.bind(this));\r\n        this.canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\r\n        this.canvas.addEventListener('mouseout', this.onMouseOut.bind(this));\r\n        this.canvas.style['cursor'] = 'none';\r\n\r\n        // splash screen\r\n        this.splash('Level ' + (this.level + 1), 1000, () => {\r\n            requestAnimFrame(this.loop);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Draw the game background.\r\n     */\r\n    drawBackground() {\r\n        // Clear stuff\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        // Starship\r\n        this.ctx.drawImage(this.sprites.starship, this.starship.x * SCALE, this.starship.y * SCALE);\r\n    };\r\n\r\n    /**\r\n     * Draw the game objects.\r\n     */\r\n    drawObjects() {\r\n        // Guard\r\n        this.ctx.drawImage(this.sprites.guard, this.guard.x * SCALE, this.guard.y * SCALE);\r\n\r\n        if (this.onDefuse) {\r\n            this.ctx.beginPath();\r\n            this.ctx.strokeStyle = '#57BCFF';\r\n            this.ctx.lineWidth = 2;\r\n            this.ctx.arc(this.guard.x + 25, this.guard.y + 25, this.currentDefuseRadius, 0, 2 * Math.PI);\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        // Comets\r\n        this.comets.forEach((comet) => {\r\n            comet.draw();\r\n            if (this.collides(comet, this.guard)) {\r\n                comet.destroyed = true;\r\n                this.guard.shield -= Math.ceil(comet.damage / 4); // quarter damage for the shield\r\n                this.score += COMET_SCORE; // fixed value  \r\n            }\r\n\r\n            if (this.collides(comet, this.starship)) {\r\n                comet.destroyed = true;\r\n                this.starship.shield -= comet.damage;\r\n            }\r\n\r\n            if (comet.destroyed) { // remove it from the array\r\n                let index = this.comets.indexOf(comet);\r\n                if (index > -1) this.comets.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        // When the level starts there is a creation barrier that will slowly fade.\r\n        let time = this.datediff(new Date(), this.levelStartTime).ms;\r\n        creationBarrier = (time < CREATION_BARRIER_STEP) ? (CREATION_BARRIER_STEP - time) / 10 : 0;\r\n\r\n        // When the level is about to end then we need to stop once again the creation of new comets.\r\n        if (time > CREATION_BARRIER_STEP && (GameLevels[this.level].time * 60 * 1000) - time < CREATION_BARRIER_STEP) {\r\n            creationBarrier = (CREATION_BARRIER_STEP - ((GameLevels[this.level].time * 60 * 1000) - time)) / 10;\r\n            if (creationBarrier > CREATION_BARRIER_STEP) creationBarrier = CREATION_BARRIER_STEP;\r\n        }\r\n\r\n        // Create objects\r\n        let rand = Math.ceil(Math.random() * 1000) - creationBarrier;\r\n        if (rand >= this.convertRate(GameLevels[this.level].comet.creationRate)) {\r\n            let comet = new Comet(this);\r\n            comet.position();\r\n            this.comets.push(comet);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Draw random game objects.\r\n     */\r\n    drawRandomObjects() {\r\n        let roll = (this.datediff(new Date(), this.lastRollTime).ms > this.randomRollTime);\r\n        let creation = false; // creation flag - we need only one creation at a time\r\n        if (roll) this.lastRollTime = new Date();\r\n\r\n        // Create Bomb\r\n        rand = Math.round(Math.random() * 1000) + 1;\r\n        if (rand >= this.convertRate(GameLevels[this.level].bomb.creationRate) && roll) {\r\n            this.randomObjects.push(new Bomb(this));\r\n            creation = true;\r\n        }\r\n\r\n        // Create Guard Shield\r\n        rand = Math.round(Math.random() * 1000) + 1;\r\n        if (rand >= this.convertRate(GameLevels[this.level].guardShield.creationRate) && roll && !creation) {\r\n            this.randomObjects.push(new GuardShield(this));\r\n            creation = true;\r\n        }\r\n\r\n        // Create Starship Shield\r\n        rand = Math.round(Math.random() * 1000) + 1;\r\n        if (rand >= this.convertRate(GameLevels[this.level].starshipShield.creationRate) && roll && !creation) {\r\n            this.randomObjects.push(new StarshipShield(this));\r\n            creation = true;\r\n        }\r\n\r\n        // Draw & Check Collision\r\n        this.randomObjects.forEach((obj) => {\r\n            switch (obj.type) {\r\n                case OBJ_TYPE_BOMB:\r\n                    this.ctx.drawImage(this.sprites.bomb, obj.x, obj.y);\r\n                    break;\r\n                case OBJ_TYPE_GSHIELD:\r\n                    this.ctx.drawImage(this.sprites.gshield, obj.x, obj.y);\r\n                    break;\r\n                case OBJ_TYPE_SSHIELD:\r\n                    this.ctx.drawImage(this.sprites.sshield, obj.x, obj.y);\r\n                    break;\r\n            }\r\n\r\n            if (this.collides(obj, this.guard))\r\n                obj.trigger();\r\n\r\n            if (obj.destroyed) {\r\n                let index = this.randomObjects.indexOf(obj);\r\n                if (index > -1) this.randomObjects.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Pause the game and display the pause menu.\r\n     */\r\n    pause() {\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fillRect(0, 0, this.canvas.width * SCALE, this.canvas.height * SCALE);\r\n        this.drawCredits();\r\n        this.ctx.fillStyle = 'white';\r\n        this.ctx.font = '24pt Arial';\r\n        this.ctx.textAlign = 'center';\r\n        this.ctx.fillText('Paused!', this.canvas.width * SCALE / 2, this.canvas.height * SCALE / 2);\r\n        this.ctx.font = '14pt Arial';\r\n        this.ctx.fontStyle = '#EEE';\r\n        this.ctx.fillText('Click the right mouse button to continue.', this.canvas.width * SCALE / 2, this.canvas.height * SCALE / 2 + 30);\r\n        this.drawStats(true);\r\n\r\n        if (!this.onPause) {\r\n            this.canvas.style['cursor'] = 'none';\r\n            let diff = new Date() - this.pauseTime;\r\n            this.levelStartTime.setMilliseconds(diff);\r\n            this.loop();\r\n            return;\r\n        }\r\n        requestAnimFrame(this.pause, this.canvas);\r\n    };\r\n\r\n    /**\r\n     * Handles main game loop.\r\n     */\r\n    loop() {\r\n        let message, callback, duration;\r\n\r\n        if (this.onPause) {\r\n            this.canvas.style['cursor'] = 'default';\r\n            this.pauseTime = new Date();\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        if (!this.onGame)\r\n            return;\r\n\r\n        if (this.datediff(new Date(), this.lastUpdateTime).ms > this.frameUpdateTime) {\r\n            this.drawBackground();\r\n            this.drawCredits();\r\n            this.drawRandomObjects();\r\n            this.drawObjects();\r\n            this.drawStats();\r\n            this.lastUpdateTime = new Date();\r\n        }\r\n\r\n        if (this.guard.shield <= 0 || this.starship.shield <= 0) {\r\n            // reset game - game over\r\n            this.onGame = false;\r\n            this.onPause = false;\r\n            //this.level = 0; \r\n            this.clearEventListeners();\r\n            message = ((this.guard.shield <= 0) ? 'Guard Destroyed!' : 'Starship Destroyed!') + ' Score ' + this.score + ' (-50%)';\r\n            this.splash(message, 2000, this.load);\r\n            this.score = (this.score > 0) ? Math.round(this.score / 2) : 0; // if the player is destroyed he'll just lose half of his score\r\n            return;\r\n        }\r\n\r\n        if (this.datediff(new Date(), this.levelStartTime).ms > GameLevels[this.level].time * 60 * 1000) {\r\n            this.onGame = false;\r\n            this.onPause = false;\r\n\r\n\r\n            if (this.level < GameLevels.length) {\r\n                message = 'Level Completed!';\r\n                callback = this.game;\r\n                duration = 2000;\r\n                this.level++;\r\n            } else {\r\n                message = 'Congrats! You\\'ve Completed All Game Levels - Score ' + this.score;\r\n                callback = this.load;\r\n                duration = 5000;\r\n                this.level = 0;\r\n            }\r\n\r\n            this.splash(message, duration, callback);\r\n            return;\r\n        }\r\n\r\n        requestAnimFrame(this.loop, this.canvas);\r\n    };\r\n\r\n    /**\r\n     * Clean game event listeners.\r\n     */\r\n    clearEventListeners() {\r\n        this.canvas.removeEventListener('click', this.onClick, false);\r\n        this.canvas.removeEventListener('contextmenu', this.onContextMenu, false);\r\n        this.canvas.removeEventListener('mousemove', this.onMouseMove, false);\r\n        this.canvas.removeEventListener('mouseout', this.onMouseOut, false);\r\n        this.canvas.removeEventListener('keyup', this.onKeyUp, false);\r\n    };\r\n\r\n    /**\r\n     * On mouse move event handler.\r\n     * @param event Event object.\r\n     */\r\n    onMouseMove(event) {\r\n        this.guard.x = (event.pageX - this.canvas.offsetLeft - 15) * SCALE;\r\n        this.guard.y = (event.pageY - this.canvas.offsetTop - 15) * SCALE;\r\n    };\r\n\r\n    /**\r\n     * On mouse out event handler.\r\n     * @param event Event object.\r\n     */\r\n    onMouseOut(event) {\r\n        this.onPause = true;\r\n    };\r\n\r\n    /**\r\n     * On click event handler.\r\n     * @param event Event object.\r\n     */\r\n    onClick(event) {\r\n        if (this.onGame && !this.onPause) {\r\n            this.defuseBomb(); // must be executed before the next command!\r\n        }\r\n\r\n        if (!this.onGame && !this.onPause) {\r\n            this.game();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * On key up event handler.\r\n     * @param event Event object.\r\n     */\r\n    onKeyUp(event) {\r\n        if (event.keyCode == KEY_ESCAPE && !this.onPause) {\r\n            this.onGame = false;\r\n            this.onPause = false;\r\n            // reset stuff\r\n            this.score = 0;\r\n            this.level = 0;\r\n            this.clearEventListeners();\r\n            this.splash('Game Over', 1000, this.load);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * On context menu pop up event handler.\r\n     * @param event Event object.\r\n     * @return {boolean} Returns false in order to disable the event.\r\n     */\r\n    onContextMenu(event) {\r\n        if (this.onGame && !this.onPause) {\r\n            this.onPause = true;\r\n        } else if (this.onGame && this.onPause) {\r\n            this.onPause = false;\r\n        }\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get date difference.\r\n     * @param {Date} date1 First date object.\r\n     * @param {Date} date2 Second date object.\r\n     * @return {Object} Returns the date difference values.\r\n     */\r\n    datediff(date1, date2) {\r\n        // @link http://stackoverflow.com/a/7709819/1718162\r\n        // @link http://stackoverflow.com/a/13894670/1718162\r\n        const diff = {};\r\n        diff.ms = (date1 - date2);\r\n        diff.days = Math.round(diff.ms / 86400000);\r\n        diff.hours = Math.round((diff.ms % 86400000) / 3600000);\r\n        diff.minutes = Math.round(((diff.ms % 86400000) % 3600000) / 60000);\r\n        diff.seconds = parseInt((date1.getTime() - date2.getTime()) / 1000);\r\n        return diff;\r\n    };\r\n\r\n    /**\r\n     * Check collision between objects.\r\n     * @param {object} obj1{x, y, width, height}\r\n     * @param {object} obj2{x, y, width, height}\r\n     * @returns {bool}\r\n     */\r\n    collides(obj1, obj2) {\r\n        let x1, y1, w1, h1; // obj1\r\n        let ox, oy, ow, oh; // obj2\r\n\r\n        x1 = obj1.x;\r\n        y1 = obj1.y;\r\n        w1 = obj1.width;\r\n        h1 = obj1.height;\r\n\r\n        x2 = obj2.x;\r\n        y2 = obj2.y;\r\n        w2 = obj2.width;\r\n        h2 = obj2.height;\r\n\r\n        // check whether objects collide\r\n        return (((x1 < x2 && (x1 + w1) > x2)\r\n            || (x1 > x2 && (x1 + w1) < (x2 + w2))\r\n            || (x1 > x2 && x1 < (x2 + w2))) &&\r\n            ((y1 < y2 && (y1 + h1) > y2)\r\n                || (y1 > y2 && (y1 + h1) < (y2 + h2))\r\n                || (y1 > y2 && y1 < (y2 + h2))))\r\n            ? true : false;\r\n    };\r\n\r\n    /**\r\n     * Draw game stats.\r\n     * @param {boolean} onPause whether the game is on pause mode.\r\n     */\r\n    drawStats(onPause) {\r\n        let currDate = (!onPause) ? new Date() : this.lastUpdateTime;\r\n        let time = this.datediff(currDate, this.levelStartTime);\r\n        let diff = new Date((GameLevels[this.level].time * 60 * 1000) - time.ms);\r\n        let minutes = (diff.getMinutes() < 10) ? '0' + diff.getMinutes() : diff.getMinutes();\r\n        let seconds = (diff.getSeconds() < 10) ? '0' + diff.getSeconds() : diff.getSeconds();\r\n\r\n        this.ctx.textAlign = 'left';\r\n        this.ctx.font = 12 * SCALE + 'pt Arial';\r\n        this.ctx.fillStyle = '#5CFF8F';\r\n\r\n        this.ctx.fillText('Level ' + (this.level + 1), 20 * SCALE, 30 * SCALE);\r\n        this.ctx.fillText('Time ' + minutes + ':' + seconds, 20 * SCALE, 50 * SCALE); // time\r\n        this.ctx.fillText('Score ' + this.score, 20 * SCALE, 70 * SCALE); // score\r\n\r\n        this.ctx.textAlign = 'right';\r\n        this.ctx.lineWidth = '1';\r\n        let gColor = this.getBarColor(this.guard.shield, onPause);\r\n        let sColor = this.getBarColor(this.starship.shield, onPause);\r\n\r\n        this.ctx.fillStyle = gColor;\r\n        this.ctx.fillText('Guard ' + this.guard.shield + '%', (this.canvas.width - 20) * SCALE, 30 * SCALE); // guard\r\n        this.ctx.fillStyle = sColor;\r\n        this.ctx.fillText('Starship ' + this.starship.shield + '%', (this.canvas.width - 20) * SCALE, 80 * SCALE); // starship\r\n\r\n        gColor = this.getBarColor(this.guard.shield, onPause, true);\r\n        sColor = this.getBarColor(this.starship.shield, onPause, true);\r\n\r\n        this.ctx.strokeStyle = gColor;\r\n        this.ctx.strokeRect((this.canvas.width - 152) * SCALE, 40, 130, 15);\r\n        this.ctx.fillStyle = gColor;\r\n        this.ctx.fillRect((this.canvas.width - 152) * SCALE, 40, this.guard.shield / 100 * 130, 15);\r\n\r\n        this.ctx.strokeStyle = sColor;\r\n        this.ctx.strokeRect((this.canvas.width - 152) * SCALE, 90, 130, 15);\r\n        this.ctx.fillStyle = sColor;\r\n        this.ctx.fillRect((this.canvas.width - 152) * SCALE, 90, this.starship.shield / 100 * 130, 15);\r\n    };\r\n\r\n    /**\r\n     * Calculate the status bar colors.\r\n     * @param {number} value Status bar value.\r\n     * @param {boolean} onPause Whether the game is on pause mode.\r\n     * @param {number} opaque Opacity levels.\r\n     * @return {string} Returns the color value.\r\n     */\r\n    getBarColor(value, onPause, opaque) {\r\n        let color;\r\n\r\n        if (value > 70)\r\n            color = (!onPause && opaque) ? 'rgba(92, 255, 201, 0.9)' : '#5CFFC9'; // cyan\r\n        else if (value > 40)\r\n            color = (!onPause && opaque) ? 'rgba(92, 255, 143, 0.9)' : '#5CFF8F'; // green\r\n        else if (value > 15)\r\n            color = (!onPause && opaque) ? 'rgba(255, 149, 92, 0.9)' : '#FF955C'; // orange\r\n        else\r\n            color = (!onPause && opaque) ? 'rgba(255, 92, 92, 0.9)' : '#FF5C5C'; // red\r\n\r\n        return color;\r\n    };\r\n\r\n    /**\r\n     * The guard is able to defuse nearby bomb, but this will also destroy any nearby objects.\r\n     */\r\n    defuseBomb() {\r\n        if (this.onDefuse) return false;\r\n\r\n        this.onDefuse = true;\r\n        let defuseInterval = setInterval(() => {\r\n            this.currentDefuseRadius++;\r\n            this.randomObjects.forEach((obj) => {\r\n                distance = Math.sqrt(Math.pow((this.guard.x + 15 - obj.x), 2) + Math.pow((this.guard.y + 15 - obj.y), 2));\r\n                if (distance <= this.currentDefuseRadius) {\r\n                    obj.destroyed = true;\r\n                    if (obj.type == OBJ_TYPE_BOMB) this.score += BOMB_SCORE;\r\n                }\r\n            });\r\n            if (this.currentDefuseRadius == this.guard.defuseRadius) {\r\n                clearInterval(defuseInterval);\r\n                this.currentDefuseRadius = 0;\r\n                this.onDefuse = false;\r\n            }\r\n        }, 7);\r\n    };\r\n\r\n    /**\r\n     * Display splash screen with a custom message.\r\n     * @param {string} text The message to be displayed on the splash screen.\r\n     * @param {int} duration The amount of time that the splash screen will remain on canvas.\r\n     * @param {function} callback This method will be called after the splash is finished.\r\n     */\r\n    splash(text, duration, callback) {\r\n        let drawStartTime = new Date();\r\n        let drawSplashScreen = () => {\r\n            this.ctx.fillStyle = 'black';\r\n            this.ctx.fillRect(0, 0, this.canvas.width * SCALE, this.canvas.height * SCALE);\r\n            this.ctx.fillStyle = 'white';\r\n            this.ctx.font = '24pt Arial';\r\n            this.ctx.textAlign = 'center';\r\n            this.ctx.fillText(text, this.canvas.width * SCALE / 2, this.canvas.height * SCALE / 2);\r\n\r\n            if (this.datediff(new Date(), drawStartTime).ms > duration) { // end of splash screen\r\n                if (callback) callback();\r\n                return;\r\n            }\r\n\r\n            requestAnimFrame(drawSplashScreen, this.canvas);\r\n        };\r\n        drawSplashScreen();\r\n    };\r\n\r\n    /**\r\n     * Convert the creation rate from percentage into a value that will be compared with the random value.\r\n     * @param {number} rate Creation rate in percentage.\r\n     * @return {number} Returns the number that is going to be compared with the random value.\r\n     */\r\n    convertRate(rate) {\r\n        return (1000 - rate * 10);\r\n    };\r\n\r\n    /**\r\n     * Draw credits on screen.\r\n     */\r\n    drawCredits() {\r\n        this.ctx.fillStyle = '#515151';\r\n        this.ctx.font = '8pt Arial';\r\n        this.ctx.textAlign = 'right';\r\n        this.ctx.fillText('(C) Copyright ' + (new Date().getFullYear()) + ' - AlexTselegidis.Com', (this.canvas.width - 10) * SCALE, (this.canvas.height - 10) * SCALE)\r\n    };\r\n\r\n    /**\r\n     * Wrap text into the provided width.\r\n     * {@link http://www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial}\r\n     * @param {string} text Text to be wrapped.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     * @param {number} maxWidth Max width of the text.\r\n     * @param {number} lineHeight Line height value.\r\n     */\r\n    wrapText(text, x, y, maxWidth, lineHeight) {\r\n        let words = text.split(' ');\r\n        let line = '';\r\n\r\n        for (let n = 0; n < words.length; n++) {\r\n            let testLine = line + words[n] + ' ';\r\n            let metrics = this.ctx.measureText(testLine);\r\n            let testWidth = metrics.width;\r\n            if (testWidth > maxWidth && n > 0) {\r\n                this.ctx.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += lineHeight;\r\n            } else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        this.ctx.fillText(line, x, y);\r\n    };\r\n\r\n    /**\r\n     * Draw intro screen.\r\n     */\r\n    drawIntroScreen() {\r\n        // Splash\r\n        this.ctx.drawImage(this.sprites.introScreen, 1, 1);\r\n\r\n        // Text\r\n        this.ctx.font = (30 * SCALE).toString() + 'pt helvetica';\r\n        this.ctx.textAlign = 'center';\r\n        this.ctx.fillStyle = '#fff';\r\n        this.ctx.fillText('Spaceguard', this.cx, this.cy - 220 * SCALE);\r\n        this.ctx.font = (20 * SCALE).toString() + 'pt helvetica';\r\n        this.ctx.fillText('Click to Start', this.cx, this.cy + 250 * SCALE);\r\n        this.canvas.style['cursor'] = 'default';\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/SpaceGuard.js","// Global Constants\r\nexport const SCALE = 1;\r\nexport const CANVAS_WIDTH = 800; // px\r\nexport const CANVAS_HEIGHT = 600; // px\r\nexport const KEY_ESCAPE = 27;\r\nexport const LOOP_DELAY = 10;\r\nexport const GUARD_SHIELD_BASE = 10;\r\nexport const STARSHIP_SHIELD_BASE = 10;\r\nexport const COMET_SCORE = 5;\r\nexport const SHIELD_SCORE = 3;\r\nexport const BOMB_SCORE = 5;\r\nexport const LEVEL_SCORE = 100;\r\nexport const CREATION_BARRIER_STEP = 5000;\r\nexport const OBJ_TYPE_BOMB = 'bomb';\r\nexport const OBJ_TYPE_GSHIELD = 'gshield';\r\nexport const OBJ_TYPE_SSHIELD = 'sshield';\n\n\n// WEBPACK FOOTER //\n// ./scripts/Constants.js","import {SCALE} from './Constants';\r\nimport GameLevels from './Levels';\r\n\r\n/**\r\n * Handles the comets animation.\r\n * @param {Spaceguard} spaceguard Spaceguard game instance.\r\n */\r\nexport default function (spaceguard) {\r\n    this.sg = spaceguard;\r\n    this.x;\r\n    this.y;\r\n    this.a; // extra direction handling\r\n    this.width = 60 * SCALE;\r\n    this.height = 60 * SCALE;\r\n    this.speedX = GameLevels[this.sg.level].comet.speed * Math.random();\r\n    this.speedY = GameLevels[this.sg.level].comet.speed * Math.random();\r\n    this.damage = Math.floor(Math.random() * GameLevels[this.sg.level].comet.damage);\r\n    this.dfs = 30 * SCALE; // initial distance from scene\r\n    this.destroyed = false;\r\n\r\n    this.position = function () {\r\n        let canvasSide = Math.ceil(Math.random() * 4);\r\n\r\n        switch (canvasSide) {\r\n            case 1: // top\r\n                this.y = -1 * this.dfs;\r\n                this.x = Math.ceil(Math.random() * spaceguard.canvas.width);\r\n                if (this.x > this.sg.canvas.width / 2) this.speedX = -1 * this.speedX;\r\n                this.speedY = -1 * this.speedY;\r\n                break;\r\n            case 2: // right\r\n                this.x = spaceguard.canvas.width + this.dfs;\r\n                this.y = Math.ceil(Math.random() * spaceguard.canvas.height);\r\n                if (this.y > this.sg.canvas.height / 2) this.speedY = -1 * this.speedY;\r\n                this.speedX = -1 * this.speedX;\r\n                break;\r\n            case 3:  // bottom\r\n                this.y = spaceguard.canvas.height + this.dfs;\r\n                this.x = Math.ceil(Math.random() * spaceguard.canvas.width);\r\n                if (this.x > this.sg.canvas.width / 2) this.speedX = -1 * this.speedX;\r\n                break;\r\n            case 4: // left\r\n                this.x = -1 * this.dfs;\r\n                this.y = Math.ceil(Math.random() * spaceguard.canvas.height);\r\n                if (this.y > this.sg.canvas.height / 2) this.speedY = -1 * this.speedY;\r\n        }\r\n\r\n        this.a = Math.random() * 1;\r\n    };\r\n\r\n    this.draw = function () {\r\n        // move\r\n        this.x += this.a * Math.ceil(Math.random() * this.speedX) + Math.round(this.speedX / 2);\r\n        this.y += this.a * Math.ceil(Math.random() * this.speedY) + Math.round(this.speedY / 2);\r\n\r\n        // check if comet is out of map\r\n        this.isOutOfMap();\r\n\r\n        // draw\r\n        this.sg.ctx.drawImage(this.sg.sprites.comet, this.x, this.y);\r\n    };\r\n\r\n    this.isOutOfMap = function () {\r\n        // if the comet is too far from the map frame it means that\r\n        // it needs to be destroyed cause it will no longer play any\r\n        // part on the game\r\n        let dist = Math.abs(Math.sqrt(Math.pow(this.x - this.sg.cx, 2) + Math.pow(this.y - this.sg.cy, 2)));\r\n        if (dist > (this.sg.canvas.width))\r\n            this.destroyed = true;\r\n    };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/Comet.js","import {SCALE} from './Constants';\r\n\r\n/**\r\n * Bomb that explodes when the guard collides with it (RANDOM OBJECT).\r\n * @param {Spaceguard} spaceguard Spaceguard game instance.\r\n */\r\nexport default function (spaceguard) {\r\n    this.sg = spaceguard;\r\n    this.type = OBJ_TYPE_BOMB;\r\n    this.color = '#6C17AD';\r\n    this.x = Math.round(Math.random() * this.sg.canvas.width * SCALE);\r\n    this.y = Math.round(Math.random() * this.sg.canvas.height * SCALE);\r\n    this.width = 30 * SCALE;\r\n    this.height = 30 * SCALE;\r\n    this.damage = 20; // base damage value\r\n    this.value = Math.ceil(Math.random() * this.damage) + this.damage;\r\n\r\n    this.trigger = function () {\r\n        this.sg.guard.shield -= this.value;\r\n        this.destroyed = true;\r\n    };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./scripts/Bomb.js","import {SCALE} from './Constants';\r\nimport GameLevels from './Levels';\r\n\r\n/**\r\n * Starship shield power up.\r\n * @param {Spaceguard} spaceguard Spaceguard game instance.\r\n */\r\nexport default function (spaceguard) {\r\n    this.sg = spaceguard;\r\n    this.type = OBJ_TYPE_SSHIELD;\r\n    this.color = '#36EB57';\r\n    this.x = Math.round(Math.random() * this.sg.canvas.width * SCALE);\r\n    this.y = Math.round(Math.random() * this.sg.canvas.height * SCALE);\r\n    this.width = 30 * SCALE;\r\n    this.height = 30 * SCALE;\r\n    this.shield = 10; // base power up value\r\n    this.value = Math.round(Math.random() * this.shield) + this.shield;\r\n\r\n    this.trigger = function () {\r\n        this.sg.starship.shield += this.value;\r\n        if (this.sg.starship.shield > GameLevels[this.sg.level].starship.shield)\r\n            this.sg.starship.shield = GameLevels[this.sg.level].starship.shield;\r\n        this.sg.score += SHIELD_SCORE;\r\n        this.destroyed = true;\r\n    };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./scripts/StarshipShield.js","/**\r\n * Sprites Definition\r\n *\r\n * All the game sprites are loaded dynamically by this script. Just\r\n * add a new item on the array.\r\n *\r\n * @type {Array}\r\n */\r\nexport default [\r\n    {\r\n        id: 'guard',\r\n        src: 'images/guard.png'\r\n    },\r\n    {\r\n        id: 'comet',\r\n        src: 'images/comet.png'\r\n    },\r\n    {\r\n        id: 'bomb',\r\n        src: 'images/bomb.png'\r\n    },\r\n    {\r\n        id: 'gshield',\r\n        src: 'images/gshield.png'\r\n    },\r\n    {\r\n        id: 'sshield',\r\n        src: 'images/sshield.png'\r\n    },\r\n    {\r\n        id: 'starship',\r\n        src: 'images/starship.png'\r\n    },\r\n    {\r\n        id: 'introScreen',\r\n        src: 'images/introScreen.png'\r\n    }\r\n];\n\n\n// WEBPACK FOOTER //\n// ./scripts/GameSprites.js","import {SCALE} from './Constants';\r\nimport GameLevels from './Levels';\r\n\r\n/**\r\n * Guard shield power up.\r\n * @param {Spaceguard} spaceguard Spaceguard game instance.\r\n */\r\nexport default function (spaceguard) {\r\n    this.sg = spaceguard;\r\n    this.type = OBJ_TYPE_GSHIELD;\r\n    this.color = '#36BDEB';\r\n    this.destroyed = false;\r\n    this.x = Math.round(Math.random() * this.sg.canvas.width * SCALE);\r\n    this.y = Math.round(Math.random() * this.sg.canvas.height * SCALE);\r\n    this.width = 30 * SCALE;\r\n    this.height = 30 * SCALE;\r\n    this.shield = 10; // base power up value\r\n    this.value = Math.round(Math.random() * this.shield) + this.shield;\r\n\r\n    this.trigger = function () {\r\n        this.sg.guard.shield += this.value;\r\n        if (this.sg.guard.shield > GameLevels[this.sg.level].guard.shield)\r\n            this.sg.guard.shield = GameLevels[this.sg.level].guard.shield;\r\n        this.sg.score += SHIELD_SCORE;\r\n        this.destroyed = true;\r\n    };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./scripts/GuardShield.js","import {SCALE} from './Constants';\r\n\r\n/**\r\n * Game levels definition.\r\n *\r\n * Adjusts the way Spaceguard is going to handle each level. The game should become more and more hard to\r\n * play as the user progress advances.\r\n *\r\n * @type {Object[]}\r\n */\r\nexport default [\r\n    // lvl 1\r\n    {\r\n        time: 1, // minutes\r\n        background: 'img-path', // image element id\r\n        guard: {\r\n            shield: 100, // % percent\r\n            defuseRadius: 80\r\n        },\r\n        starship: {\r\n            shield: 100 // % percent\r\n        },\r\n        comet: {\r\n            speed: 7 * SCALE, // points\r\n            damage: 10, // points\r\n            creationRate: 15  // % percent\r\n        },\r\n        bomb: {\r\n            creationRate: 35 // % percent\r\n        },\r\n        guardShield: {\r\n            creationRate: 20 // % percent\r\n        },\r\n        starshipShield: {\r\n            creationRate: 10 // % percent\r\n        }\r\n    },\r\n    // lvl 2\r\n    {\r\n        time: 2,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 85\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 8 * SCALE,\r\n            damage: 13,\r\n            creationRate: 20  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 40\r\n        },\r\n        guardShield: {\r\n            creationRate: 20\r\n        },\r\n        starshipShield: {\r\n            creationRate: 12\r\n        }\r\n    },\r\n    // lvl 3\r\n    {\r\n        time: 2,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 85\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 8 * SCALE,\r\n            damage: 13,\r\n            creationRate: 25  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 40\r\n        },\r\n        guardShield: {\r\n            creationRate: 22\r\n        },\r\n        starshipShield: {\r\n            creationRate: 15\r\n        }\r\n    },\r\n    // lvl 4\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 90\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 8 * SCALE,\r\n            damage: 20,\r\n            creationRate: 35  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 45\r\n        },\r\n        guardShield: {\r\n            creationRate: 30\r\n        },\r\n        starshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 5\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 90\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        starshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 6\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 95\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        starshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 7\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 95\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        starshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 8\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 95\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        starshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 9\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 100\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        starshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 10\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 110\r\n        },\r\n        starship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        starshipShield: {\r\n            creationRate: 25\r\n        }\r\n    }\r\n];\n\n\n// WEBPACK FOOTER //\n// ./scripts/Levels.js"],"sourceRoot":""}