{"version":3,"sources":["webpack:///webpack/bootstrap a053a9ebd38942a96022","webpack:///./scripts/Constants.js","webpack:///./scripts/Levels.js","webpack:///./scripts/Init.js","webpack:///./scripts/Spaceguard.js","webpack:///./scripts/Environment.js","webpack:///./scripts/Sprites.js","webpack:///./scripts/Comet.js","webpack:///./scripts/Bomb.js","webpack:///./scripts/SpaceshipShield.js","webpack:///./scripts/GuardShield.js"],"names":["SCALE","CANVAS_WIDTH","CANVAS_HEIGHT","KEY_ESCAPE","COMET_SCORE","SHIELD_SCORE","BOMB_SCORE","CREATION_BARRIER_STEP","OBJ_TYPE_BOMB","OBJ_TYPE_GSHIELD","OBJ_TYPE_SSHIELD","time","background","guard","shield","defuseRadius","spaceship","comet","speed","damage","creationRate","bomb","guardShield","spaceshipShield","window","spaceguard","Spaceguard","canvas","ctx","cx","cy","x","undefined","y","width","height","sprites","comets","frameUpdateTime","lastUpdateTime","levelStartTime","pauseTime","randomRollTime","lastRollTime","Date","level","score","randomObjects","onDefuse","currentDefuseRadius","spaceBackground","canvasId","document","getElementById","getContext","forEach","sprite","img","createElement","id","src","style","display","body","appendChild","isMobile","onload","drawIntroScreen","load","rect","fillStyle","fillRect","font","textAlign","wrapText","addEventListener","onClick","bind","onContextMenu","onGame","onPause","i","push","position","onKeyUp","onMouseMove","onMouseOut","splash","requestAnimationFrame","loop","clearRect","drawImage","beginPath","strokeStyle","lineWidth","arc","Math","PI","stroke","draw","collides","destroyed","ceil","index","indexOf","splice","datediff","ms","creationBarrier","rand","random","convertRate","roll","creation","round","obj","type","gshield","sshield","trigger","drawCredits","fillText","fontStyle","drawStats","diff","setMilliseconds","pause","message","callback","duration","drawBackground","drawRandomObjects","drawObjects","clearEventListeners","length","game","removeEventListener","event","pageX","offsetLeft","pageY","offsetTop","defuseBomb","keyCode","preventDefault","date1","date2","days","hours","minutes","seconds","parseInt","getTime","obj1","obj2","x1","y1","w1","h1","x2","y2","w2","h2","currDate","getMinutes","getSeconds","gColor","getBarColor","sColor","strokeRect","value","opaque","color","defuseInterval","setInterval","distance","sqrt","pow","clearInterval","text","drawStartTime","drawSplashScreen","rate","getFullYear","maxWidth","lineHeight","words","split","line","n","testLine","metrics","measureText","testWidth","introScreen","toString","TOUCH_DOWN_EVENT_NAME","TOUCH_UP_EVENT_NAME","TOUCH_MOVE_EVENT_NAME","TOUCH_DOUBLE_TAB_EVENT_NAME","isAndroid","navigator","userAgent","match","isBlackBerry","isIOS","isOpera","isWindows","Comet","a","speedX","speedY","floor","dfs","canvasSide","isOutOfMap","dist","abs","Bomb","GuardShield"],"mappings":"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","file":"spaceguard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a053a9ebd38942a96022","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\n// Global Constants\r\nexport const SCALE = 1;\r\nexport const CANVAS_WIDTH = 800; // px\r\nexport const CANVAS_HEIGHT = 600; // px\r\nexport const KEY_ESCAPE = 27;\r\nexport const COMET_SCORE = 5;\r\nexport const SHIELD_SCORE = 3;\r\nexport const BOMB_SCORE = 5;\r\nexport const CREATION_BARRIER_STEP = 5000;\r\nexport const OBJ_TYPE_BOMB = 'bomb';\r\nexport const OBJ_TYPE_GSHIELD = 'gshield';\r\nexport const OBJ_TYPE_SSHIELD = 'sshield';\n\n\n// WEBPACK FOOTER //\n// ./scripts/Constants.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\nimport {SCALE} from './Constants';\r\n\r\n/**\r\n * Game levels definition.\r\n *\r\n * Adjusts the way Spaceguard is going to handle each level. The game should become more and more hard to\r\n * play as the user progress advances.\r\n *\r\n * @type {Object[]}\r\n */\r\nexport default [\r\n    // lvl 1\r\n    {\r\n        time: 1, // minutes\r\n        background: 'img-path', // image element id\r\n        guard: {\r\n            shield: 100, // % percent\r\n            defuseRadius: 80\r\n        },\r\n        spaceship: {\r\n            shield: 100 // % percent\r\n        },\r\n        comet: {\r\n            speed: 7 * SCALE, // points\r\n            damage: 10, // points\r\n            creationRate: 15  // % percent\r\n        },\r\n        bomb: {\r\n            creationRate: 35 // % percent\r\n        },\r\n        guardShield: {\r\n            creationRate: 20 // % percent\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 10 // % percent\r\n        }\r\n    },\r\n    // lvl 2\r\n    {\r\n        time: 2,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 85\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 8 * SCALE,\r\n            damage: 13,\r\n            creationRate: 20  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 40\r\n        },\r\n        guardShield: {\r\n            creationRate: 20\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 12\r\n        }\r\n    },\r\n    // lvl 3\r\n    {\r\n        time: 2,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 85\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 8 * SCALE,\r\n            damage: 13,\r\n            creationRate: 25  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 40\r\n        },\r\n        guardShield: {\r\n            creationRate: 22\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 15\r\n        }\r\n    },\r\n    // lvl 4\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 90\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 8 * SCALE,\r\n            damage: 20,\r\n            creationRate: 35  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 45\r\n        },\r\n        guardShield: {\r\n            creationRate: 30\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 5\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 90\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 6\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 95\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 7\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 95\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 8\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 95\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 9\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 100\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 25\r\n        }\r\n    },\r\n    // lvl 10\r\n    {\r\n        time: 3,\r\n        background: 'img-path',\r\n        guard: {\r\n            shield: 100,\r\n            defuseRadius: 110\r\n        },\r\n        spaceship: {\r\n            shield: 100\r\n        },\r\n        comet: {\r\n            speed: 9 * SCALE,\r\n            damage: 20,\r\n            creationRate: 40  // if higher less will be created\r\n        },\r\n        bomb: {\r\n            creationRate: 50\r\n        },\r\n        guardShield: {\r\n            creationRate: 35\r\n        },\r\n        spaceshipShield: {\r\n            creationRate: 25\r\n        }\r\n    }\r\n];\n\n\n// WEBPACK FOOTER //\n// ./scripts/Levels.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\nimport Spaceguard from './Spaceguard';\r\n\r\nwindow.spaceguard = new Spaceguard();\n\n\n// WEBPACK FOOTER //\n// ./scripts/Init.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\nimport {\r\n    SCALE,\r\n    CANVAS_WIDTH,\r\n    CANVAS_HEIGHT,\r\n    KEY_ESCAPE,\r\n    COMET_SCORE,\r\n    BOMB_SCORE,\r\n    CREATION_BARRIER_STEP,\r\n    OBJ_TYPE_BOMB,\r\n    OBJ_TYPE_GSHIELD,\r\n    OBJ_TYPE_SSHIELD\r\n} from './Constants';\r\nimport Environment from './Environment';\r\nimport Sprites from './Sprites';\r\nimport Levels from './Levels';\r\nimport Comet from './Comet';\r\nimport Bomb from './Bomb';\r\nimport SpaceshipShield from './SpaceshipShield';\r\nimport GuardShield from './GuardShield';\r\n\r\n/**\r\n * Spaceguard\r\n *\r\n * Main game class that handles core operations and loops.\r\n */\r\nexport default class Spaceguard {\r\n    /**\r\n     * Class constructor.\r\n     */\r\n    constructor() {\r\n        this.canvas;\r\n        this.ctx;\r\n        this.cx; // center x & y\r\n        this.cy;\r\n        this.guard = {\r\n            x: undefined,\r\n            y: undefined,\r\n            width: 50 * SCALE,\r\n            height: 50 * SCALE,\r\n            shield: 100,\r\n            defuseRadius: 50\r\n        };\r\n        this.spaceship = {\r\n            x: undefined,\r\n            y: undefined,\r\n            width: 135 * SCALE,\r\n            height: 135 * SCALE,\r\n            shield: 100\r\n        };\r\n        this.sprites = {};\r\n        this.comets;\r\n        this.frameUpdateTime = 1000 / 60; // 60 fps\r\n        this.lastUpdateTime; // last time canvas was updated\r\n        this.levelStartTime; // level start time - the player needs to survive for some minutes until the level is finished\r\n        this.pauseTime; // Stores the paused time period.\r\n        this.randomRollTime = 3000;\r\n        this.lastRollTime = new Date();\r\n        this.level = 0; // level let starts from 0, not from 1 (due to array index base)\r\n        this.score = 0;\r\n        this.randomObjects = [];\r\n        this.onDefuse = false;\r\n        this.currentDefuseRadius = 0; // used for graphic display\r\n        this.spaceBackground;\r\n    }\r\n\r\n    /**\r\n     * Initialize game platform.\r\n     *\r\n     * @param {string} canvasId Canvas DOM element.\r\n     *\r\n     * @return {Object} Returns game instance.\r\n     */\r\n    initialize(canvasId) {\r\n        this.canvas = document.getElementById(canvasId);\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        // load image sprites\r\n        Sprites.forEach((sprite) => {\r\n            // let sprite = Sprites[i];\r\n            const img = document.createElement('img');\r\n            img.id = sprite.id;\r\n            img.src = sprite.src;\r\n            img.style.display = 'none';\r\n            document.body.appendChild(img);\r\n            this.sprites[sprite.id] = img; // store the element handle for later use\r\n\r\n            // draw main screen when the images are finished loading\r\n            if (img.id === 'introScreen' && !Environment.isMobile()) {\r\n                img.onload = () => {\r\n                    this.drawIntroScreen();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.load();\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Load needed resource files - display initial screen to user.\r\n     *\r\n     * @return {Object} Returns game instance.\r\n     */\r\n    load() {\r\n        // init canvas\r\n        this.canvas.width = CANVAS_WIDTH * SCALE;\r\n        this.canvas.height = CANVAS_HEIGHT * SCALE;\r\n        this.canvas.style.background = '#000';\r\n        this.cx = this.canvas.width / 2;\r\n        this.cy = this.canvas.height / 2;\r\n        this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        // Check if user agent is a mobile device.\r\n        if (Environment.isMobile()) {\r\n            this.ctx.fillStyle = '#000';\r\n            this.ctx.fillRect(0, 0, this.canvas.width * SCALE, this.canvas.height * SCALE);\r\n            this.ctx.fillStyle = '#fff';\r\n            this.ctx.font = '14pt Arial';\r\n            this.ctx.textAlign = 'center';\r\n            this.wrapText('Unfortunately Spaceguard cannot be played on mobile devices. Please try again from a desktop computer.',\r\n                (this.canvas.width / 2) * SCALE, (this.canvas.height / 2) * SCALE, 350 * SCALE, 25 * SCALE);\r\n            return;\r\n        }\r\n\r\n        this.drawIntroScreen();\r\n\r\n        // events\r\n        this.canvas.addEventListener('click', this.onClick.bind(this), false);\r\n        this.canvas.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Execute main game loop.\r\n     *\r\n     * @return {Object} Returns game instance.\r\n     */\r\n    game() {\r\n        // init game lets\r\n        this.onGame = true;\r\n        this.onPause = false;\r\n        this.levelStartTime = new Date();\r\n        this.lastUpdateTime = new Date();\r\n        this.randomObjects = [];\r\n        this.guard.x = this.cx;\r\n        this.guard.y = this.cy;\r\n        this.guard.shield = Levels[this.level].guard.shield;\r\n        this.guard.defuseRadius = Levels[this.level].guard.defuseRadius;\r\n        this.guard.img = document.getElementById('guard');\r\n        this.spaceship.x = this.cx - (this.spaceship.width / 2);\r\n        this.spaceship.y = this.cy - (this.spaceship.height / 2);\r\n        this.spaceship.shield = Levels[this.level].spaceship.shield;\r\n        this.spaceship.img = document.getElementById('spaceship');\r\n\r\n        // Create comets.\r\n        this.comets = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            this.comets.push(new Comet(this));\r\n            this.comets[i].position();\r\n        }\r\n\r\n        // Add event listeners.\r\n        this.canvas.addEventListener('keyup', this.onKeyUp.bind(this));\r\n        this.canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\r\n        this.canvas.addEventListener('mouseout', this.onMouseOut.bind(this));\r\n        this.canvas.style['cursor'] = 'none';\r\n\r\n        // Splash screen.\r\n        this.splash('Level ' + (this.level + 1), 1000, () => {\r\n            requestAnimationFrame(this.loop.bind(this));\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Draw the game background.\r\n     */\r\n    drawBackground() {\r\n        // Clear stuff\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        // Spaceship\r\n        this.ctx.drawImage(this.sprites.spaceship, this.spaceship.x * SCALE, this.spaceship.y * SCALE);\r\n    };\r\n\r\n    /**\r\n     * Draw the game objects.\r\n     */\r\n    drawObjects() {\r\n        // Guard\r\n        this.ctx.drawImage(this.sprites.guard, this.guard.x * SCALE, this.guard.y * SCALE);\r\n\r\n        if (this.onDefuse) {\r\n            this.ctx.beginPath();\r\n            this.ctx.strokeStyle = '#57BCFF';\r\n            this.ctx.lineWidth = 2;\r\n            this.ctx.arc(this.guard.x + 25, this.guard.y + 25, this.currentDefuseRadius, 0, 2 * Math.PI);\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        // Comets\r\n        this.comets.forEach((comet) => {\r\n            comet.draw();\r\n            if (this.collides(comet, this.guard)) {\r\n                comet.destroyed = true;\r\n                this.guard.shield -= Math.ceil(comet.damage / 4); // quarter damage for the shield\r\n                this.score += COMET_SCORE; // fixed value  \r\n            }\r\n\r\n            if (this.collides(comet, this.spaceship)) {\r\n                comet.destroyed = true;\r\n                this.spaceship.shield -= comet.damage;\r\n            }\r\n\r\n            if (comet.destroyed) { // remove it from the array\r\n                let index = this.comets.indexOf(comet);\r\n                if (index > -1) this.comets.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        // When the level starts there is a creation barrier that will slowly fade.\r\n        let time = this.datediff(new Date(), this.levelStartTime).ms;\r\n        let creationBarrier = (time < CREATION_BARRIER_STEP) ? (CREATION_BARRIER_STEP - time) / 10 : 0;\r\n\r\n        // When the level is about to end then we need to stop once again the creation of new comets.\r\n        if (time > CREATION_BARRIER_STEP && (Levels[this.level].time * 60 * 1000) - time < CREATION_BARRIER_STEP) {\r\n            creationBarrier = (CREATION_BARRIER_STEP - ((Levels[this.level].time * 60 * 1000) - time)) / 10;\r\n            if (creationBarrier > CREATION_BARRIER_STEP) creationBarrier = CREATION_BARRIER_STEP;\r\n        }\r\n\r\n        // Create objects\r\n        let rand = Math.ceil(Math.random() * 1000) - creationBarrier;\r\n        if (rand >= this.convertRate(Levels[this.level].comet.creationRate)) {\r\n            let comet = new Comet(this);\r\n            comet.position();\r\n            this.comets.push(comet);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Draw random game objects.\r\n     */\r\n    drawRandomObjects() {\r\n        let roll = (this.datediff(new Date(), this.lastRollTime).ms > this.randomRollTime);\r\n        let creation = false; // creation flag - we need only one creation at a time\r\n        if (roll) this.lastRollTime = new Date();\r\n\r\n        // Create Bomb\r\n        let rand = Math.round(Math.random() * 1000) + 1;\r\n        if (rand >= this.convertRate(Levels[this.level].bomb.creationRate) && roll) {\r\n            this.randomObjects.push(new Bomb(this));\r\n            creation = true;\r\n        }\r\n\r\n        // Create Guard Shield\r\n        rand = Math.round(Math.random() * 1000) + 1;\r\n        if (rand >= this.convertRate(Levels[this.level].guardShield.creationRate) && roll && !creation) {\r\n            this.randomObjects.push(new GuardShield(this));\r\n            creation = true;\r\n        }\r\n\r\n        // Create Spaceship Shield\r\n        rand = Math.round(Math.random() * 1000) + 1;\r\n        if (rand >= this.convertRate(Levels[this.level].spaceshipShield.creationRate) && roll && !creation) {\r\n            this.randomObjects.push(new SpaceshipShield(this));\r\n            creation = true;\r\n        }\r\n\r\n        // Draw & Check Collision\r\n        this.randomObjects.forEach((obj) => {\r\n            switch (obj.type) {\r\n                case OBJ_TYPE_BOMB:\r\n                    this.ctx.drawImage(this.sprites.bomb, obj.x, obj.y);\r\n                    break;\r\n                case OBJ_TYPE_GSHIELD:\r\n                    this.ctx.drawImage(this.sprites.gshield, obj.x, obj.y);\r\n                    break;\r\n                case OBJ_TYPE_SSHIELD:\r\n                    this.ctx.drawImage(this.sprites.sshield, obj.x, obj.y);\r\n                    break;\r\n            }\r\n\r\n            if (this.collides(obj, this.guard))\r\n                obj.trigger();\r\n\r\n            if (obj.destroyed) {\r\n                let index = this.randomObjects.indexOf(obj);\r\n                if (index > -1) this.randomObjects.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Pause the game and display the pause menu.\r\n     */\r\n    pause() {\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fillRect(0, 0, this.canvas.width * SCALE, this.canvas.height * SCALE);\r\n        this.drawCredits();\r\n        this.ctx.fillStyle = 'white';\r\n        this.ctx.font = '24pt Arial';\r\n        this.ctx.textAlign = 'center';\r\n        this.ctx.fillText('Paused!', this.canvas.width * SCALE / 2, this.canvas.height * SCALE / 2);\r\n        this.ctx.font = '14pt Arial';\r\n        this.ctx.fontStyle = '#EEE';\r\n        this.ctx.fillText('Click the right mouse button to continue.', this.canvas.width * SCALE / 2, this.canvas.height * SCALE / 2 + 30);\r\n        this.drawStats(true);\r\n\r\n        if (!this.onPause) {\r\n            this.canvas.style['cursor'] = 'none';\r\n            let diff = new Date() - this.pauseTime;\r\n            this.levelStartTime.setMilliseconds(diff);\r\n            this.loop();\r\n            return;\r\n        }\r\n        requestAnimationFrame(this.pause.bind(this), this.canvas);\r\n    };\r\n\r\n    /**\r\n     * Handles main game loop.\r\n     */\r\n    loop() {\r\n        let message;\r\n        let callback;\r\n        let duration;\r\n\r\n        if (this.onPause) {\r\n            this.canvas.style['cursor'] = 'default';\r\n            this.pauseTime = new Date();\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        if (!this.onGame) {\r\n            return;\r\n        }\r\n\r\n        if (this.datediff(new Date(), this.lastUpdateTime).ms > this.frameUpdateTime) {\r\n            this.drawBackground();\r\n            this.drawCredits();\r\n            this.drawRandomObjects();\r\n            this.drawObjects();\r\n            this.drawStats();\r\n            this.lastUpdateTime = new Date();\r\n        }\r\n\r\n        if (this.guard.shield <= 0 || this.spaceship.shield <= 0) {\r\n            // Reset game - game over\r\n            this.onGame = false;\r\n            this.onPause = false;\r\n            //this.level = 0; \r\n            this.clearEventListeners();\r\n            message = (this.guard.shield <= 0 ? 'Guard Destroyed!' : 'Spaceship Destroyed!') + ' Score ' + this.score + ' (-50%)';\r\n            this.splash(message, 2000, this.load);\r\n            this.score = this.score > 0 ? Math.round(this.score / 2) : 0; // if the player is destroyed he'll just lose half of his score\r\n            return;\r\n        }\r\n\r\n        if (this.datediff(new Date(), this.levelStartTime).ms > Levels[this.level].time * 60 * 1000) {\r\n            this.onGame = false;\r\n            this.onPause = false;\r\n\r\n            if (this.level < Levels.length) {\r\n                message = 'Level Completed!';\r\n                callback = this.game.bind(this);\r\n                duration = 2000;\r\n                this.level++;\r\n            } else {\r\n                message = 'Congrats! You\\'ve Completed All Game Levels - Score ' + this.score;\r\n                callback = this.load.bind(this);\r\n                duration = 5000;\r\n                this.level = 0;\r\n            }\r\n\r\n            this.splash(message, duration, callback);\r\n\r\n            return;\r\n        }\r\n\r\n        requestAnimationFrame(this.loop.bind(this), this.canvas);\r\n    };\r\n\r\n    /**\r\n     * Clean game event listeners.\r\n     */\r\n    clearEventListeners() {\r\n        this.canvas.removeEventListener('click', this.onClick, false);\r\n        this.canvas.removeEventListener('contextmenu', this.onContextMenu, false);\r\n        this.canvas.removeEventListener('mousemove', this.onMouseMove, false);\r\n        this.canvas.removeEventListener('mouseout', this.onMouseOut, false);\r\n        this.canvas.removeEventListener('keyup', this.onKeyUp, false);\r\n    };\r\n\r\n    /**\r\n     * On mouse move event handler.\r\n     *\r\n     * @param event Event object.\r\n     */\r\n    onMouseMove(event) {\r\n        this.guard.x = (event.pageX - this.canvas.offsetLeft - 15) * SCALE;\r\n        this.guard.y = (event.pageY - this.canvas.offsetTop - 15) * SCALE;\r\n    };\r\n\r\n    /**\r\n     * On mouse out event handler.\r\n     *\r\n     * @param event Event object.\r\n     */\r\n    onMouseOut(event) {\r\n        this.onPause = true;\r\n    };\r\n\r\n    /**\r\n     * On click event handler.\r\n     *\r\n     * @param event Event object.\r\n     */\r\n    onClick(event) {\r\n        if (this.onGame && !this.onPause) {\r\n            this.defuseBomb(); // must be executed before the next command!\r\n        }\r\n\r\n        if (!this.onGame && !this.onPause) {\r\n            this.game();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * On key up event handler.\r\n     *\r\n     * @param event Event object.\r\n     */\r\n    onKeyUp(event) {\r\n        if (event.keyCode == KEY_ESCAPE && !this.onPause) {\r\n            this.onGame = false;\r\n            this.onPause = false;\r\n            // reset stuff\r\n            this.score = 0;\r\n            this.level = 0;\r\n            this.clearEventListeners();\r\n            this.splash('Game Over', 1000, this.load);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * On context menu pop up event handler.\r\n     *\r\n     * @param {Event} event Event object.\r\n     *\r\n     * @return {boolean} Returns false in order to disable the event.\r\n     */\r\n    onContextMenu(event) {\r\n        if (this.onGame && !this.onPause) {\r\n            this.onPause = true;\r\n        } else if (this.onGame && this.onPause) {\r\n            this.onPause = false;\r\n        }\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get date difference.\r\n     *\r\n     * @param {Date} date1 First date object.\r\n     * @param {Date} date2 Second date object.\r\n     *\r\n     * @return {Object} Returns the date difference values.\r\n     */\r\n    datediff(date1, date2) {\r\n        // @link http://stackoverflow.com/a/7709819/1718162\r\n        // @link http://stackoverflow.com/a/13894670/1718162\r\n        const diff = {};\r\n        diff.ms = (date1 - date2);\r\n        diff.days = Math.round(diff.ms / 86400000);\r\n        diff.hours = Math.round((diff.ms % 86400000) / 3600000);\r\n        diff.minutes = Math.round(((diff.ms % 86400000) % 3600000) / 60000);\r\n        diff.seconds = parseInt((date1.getTime() - date2.getTime()) / 1000);\r\n        return diff;\r\n    };\r\n\r\n    /**\r\n     * Check collision between objects.\r\n     *\r\n     * @param {Object} obj1{x, y, width, height} First collision object.\r\n     * @param {Object} obj2{x, y, width, height} Second collision object.\r\n     *\r\n     * @return {boolean} Returns whether the objects collide or not.\r\n     */\r\n    collides(obj1, obj2) {\r\n        let x1, y1, w1, h1; // obj1\r\n        let x2, y2, w2, h2; // obj2\r\n\r\n        x1 = obj1.x;\r\n        y1 = obj1.y;\r\n        w1 = obj1.width;\r\n        h1 = obj1.height;\r\n\r\n        x2 = obj2.x;\r\n        y2 = obj2.y;\r\n        w2 = obj2.width;\r\n        h2 = obj2.height;\r\n\r\n        // check whether objects collide\r\n        return (((x1 < x2 && (x1 + w1) > x2)\r\n            || (x1 > x2 && (x1 + w1) < (x2 + w2))\r\n            || (x1 > x2 && x1 < (x2 + w2))) &&\r\n            ((y1 < y2 && (y1 + h1) > y2)\r\n                || (y1 > y2 && (y1 + h1) < (y2 + h2))\r\n                || (y1 > y2 && y1 < (y2 + h2))))\r\n            ? true : false;\r\n    };\r\n\r\n    /**\r\n     * Draw game stats.\r\n     *\r\n     * @param {boolean} onPause whether the game is on pause mode.\r\n     */\r\n    drawStats(onPause) {\r\n        let currDate = (!onPause) ? new Date() : this.lastUpdateTime;\r\n        let time = this.datediff(currDate, this.levelStartTime);\r\n        let diff = new Date((Levels[this.level].time * 60 * 1000) - time.ms);\r\n        let minutes = (diff.getMinutes() < 10) ? '0' + diff.getMinutes() : diff.getMinutes();\r\n        let seconds = (diff.getSeconds() < 10) ? '0' + diff.getSeconds() : diff.getSeconds();\r\n\r\n        this.ctx.textAlign = 'left';\r\n        this.ctx.font = 12 * SCALE + 'pt Arial';\r\n        this.ctx.fillStyle = '#5CFF8F';\r\n\r\n        this.ctx.fillText('Level ' + (this.level + 1), 20 * SCALE, 30 * SCALE);\r\n        this.ctx.fillText('Time ' + minutes + ':' + seconds, 20 * SCALE, 50 * SCALE); // time\r\n        this.ctx.fillText('Score ' + this.score, 20 * SCALE, 70 * SCALE); // score\r\n\r\n        this.ctx.textAlign = 'right';\r\n        this.ctx.lineWidth = '1';\r\n        let gColor = this.getBarColor(this.guard.shield, onPause);\r\n        let sColor = this.getBarColor(this.spaceship.shield, onPause);\r\n\r\n        this.ctx.fillStyle = gColor;\r\n        this.ctx.fillText('Guard ' + this.guard.shield + '%', (this.canvas.width - 20) * SCALE, 30 * SCALE); // guard\r\n        this.ctx.fillStyle = sColor;\r\n        this.ctx.fillText('Spaceship ' + this.spaceship.shield + '%', (this.canvas.width - 20) * SCALE, 80 * SCALE); // spaceship\r\n\r\n        gColor = this.getBarColor(this.guard.shield, onPause, true);\r\n        sColor = this.getBarColor(this.spaceship.shield, onPause, true);\r\n\r\n        this.ctx.strokeStyle = gColor;\r\n        this.ctx.strokeRect((this.canvas.width - 152) * SCALE, 40, 130, 15);\r\n        this.ctx.fillStyle = gColor;\r\n        this.ctx.fillRect((this.canvas.width - 152) * SCALE, 40, this.guard.shield / 100 * 130, 15);\r\n\r\n        this.ctx.strokeStyle = sColor;\r\n        this.ctx.strokeRect((this.canvas.width - 152) * SCALE, 90, 130, 15);\r\n        this.ctx.fillStyle = sColor;\r\n        this.ctx.fillRect((this.canvas.width - 152) * SCALE, 90, this.spaceship.shield / 100 * 130, 15);\r\n    };\r\n\r\n    /**\r\n     * Calculate the status bar colors.\r\n     *\r\n     * @param {number} value Status bar value.\r\n     * @param {boolean} onPause Whether the game is on pause mode.\r\n     * @param {number} opaque Opacity levels.\r\n     *\r\n     * @return {string} Returns the color value.\r\n     */\r\n    getBarColor(value, onPause, opaque) {\r\n        let color;\r\n\r\n        if (value > 70) {\r\n            color = (!onPause && opaque) ? 'rgba(92, 255, 201, 0.9)' : '#5CFFC9'; // cyan\r\n        } else if (value > 40) {\r\n            color = (!onPause && opaque) ? 'rgba(92, 255, 143, 0.9)' : '#5CFF8F'; // green\r\n        } else if (value > 15) {\r\n            color = (!onPause && opaque) ? 'rgba(255, 149, 92, 0.9)' : '#FF955C'; // orange\r\n        } else {\r\n            color = (!onPause && opaque) ? 'rgba(255, 92, 92, 0.9)' : '#FF5C5C'; // red\r\n        }\r\n\r\n        return color;\r\n    };\r\n\r\n    /**\r\n     * The guard is able to defuse nearby bomb, but this will also destroy any nearby objects.\r\n     */\r\n    defuseBomb() {\r\n        if (this.onDefuse) {\r\n            return false;\r\n        }\r\n\r\n        this.onDefuse = true;\r\n\r\n        let defuseInterval = setInterval(() => {\r\n            this.currentDefuseRadius++;\r\n            this.randomObjects.forEach((obj) => {\r\n                let distance = Math.sqrt(Math.pow((this.guard.x + 15 - obj.x), 2) + Math.pow((this.guard.y + 15 - obj.y), 2));\r\n\r\n                if (distance <= this.currentDefuseRadius) {\r\n                    obj.destroyed = true;\r\n                    if (obj.type == OBJ_TYPE_BOMB) {\r\n                        this.score += BOMB_SCORE;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (this.currentDefuseRadius == this.guard.defuseRadius) {\r\n                clearInterval(defuseInterval);\r\n                this.currentDefuseRadius = 0;\r\n                this.onDefuse = false;\r\n            }\r\n        }, 7);\r\n    };\r\n\r\n    /**\r\n     * Display splash screen with a custom message.\r\n     *\r\n     * @param {string} text The message to be displayed on the splash screen.\r\n     * @param {int} duration The amount of time that the splash screen will remain on canvas.\r\n     * @param {Function} callback This method will be called after the splash is finished.\r\n     */\r\n    splash(text, duration, callback) {\r\n        const drawStartTime = new Date();\r\n\r\n        let drawSplashScreen = () => {\r\n            this.ctx.fillStyle = 'black';\r\n            this.ctx.fillRect(0, 0, this.canvas.width * SCALE, this.canvas.height * SCALE);\r\n            this.ctx.fillStyle = 'white';\r\n            this.ctx.font = '24pt Arial';\r\n            this.ctx.textAlign = 'center';\r\n            this.ctx.fillText(text, this.canvas.width * SCALE / 2, this.canvas.height * SCALE / 2);\r\n\r\n            if (this.datediff(new Date(), drawStartTime).ms > duration) { // end of splash screen\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            requestAnimationFrame(drawSplashScreen, this.canvas);\r\n        };\r\n\r\n        drawSplashScreen();\r\n    };\r\n\r\n    /**\r\n     * Convert the creation rate from percentage into a value that will be compared with the random value.\r\n     *\r\n     * @param {number} rate Creation rate in percentage.\r\n     *\r\n     * @return {number} Returns the number that is going to be compared with the random value.\r\n     */\r\n    convertRate(rate) {\r\n        return (1000 - rate * 10);\r\n    };\r\n\r\n    /**\r\n     * Draw credits on screen.\r\n     */\r\n    drawCredits() {\r\n        this.ctx.fillStyle = '#515151';\r\n        this.ctx.font = '8pt Arial';\r\n        this.ctx.textAlign = 'right';\r\n        this.ctx.fillText('Copyright © ' + (new Date().getFullYear()) + ' - alextselegidis.com', (this.canvas.width - 10) * SCALE, (this.canvas.height - 10) * SCALE)\r\n    };\r\n\r\n    /**\r\n     * Wrap text into the provided width.\r\n     *\r\n     * {@link http://www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial}\r\n     *\r\n     * @param {string} text Text to be wrapped.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     * @param {number} maxWidth Max width of the text.\r\n     * @param {number} lineHeight Line height value.\r\n     */\r\n    wrapText(text, x, y, maxWidth, lineHeight) {\r\n        let words = text.split(' ');\r\n        let line = '';\r\n\r\n        for (let n = 0; n < words.length; n++) {\r\n            let testLine = line + words[n] + ' ';\r\n            let metrics = this.ctx.measureText(testLine);\r\n            let testWidth = metrics.width;\r\n            if (testWidth > maxWidth && n > 0) {\r\n                this.ctx.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += lineHeight;\r\n            } else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        this.ctx.fillText(line, x, y);\r\n    };\r\n\r\n    /**\r\n     * Draw intro screen.\r\n     */\r\n    drawIntroScreen() {\r\n        // Splash\r\n        this.ctx.drawImage(this.sprites.introScreen, 1, 1);\r\n\r\n        // Text\r\n        this.ctx.font = (30 * SCALE).toString() + 'pt helvetica';\r\n        this.ctx.textAlign = 'center';\r\n        this.ctx.fillStyle = '#fff';\r\n        this.ctx.fillText('Spaceguard', this.cx, this.cy - 220 * SCALE);\r\n        this.ctx.font = (20 * SCALE).toString() + 'pt helvetica';\r\n        this.ctx.fillText('Click to Start', this.cx, this.cy + 250 * SCALE);\r\n        this.canvas.style['cursor'] = 'default';\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/Spaceguard.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Check user agent device type.\r\n *\r\n * {@link http://stackoverflow.com/a/16755700/1718162}\r\n */\r\nexport default {\r\n    // Mobile or desktop compatible event name, to be used with '.on' function.\r\n    TOUCH_DOWN_EVENT_NAME: 'mousedown touchstart',\r\n    TOUCH_UP_EVENT_NAME: 'mouseup touchend',\r\n    TOUCH_MOVE_EVENT_NAME: 'mousemove touchmove',\r\n    TOUCH_DOUBLE_TAB_EVENT_NAME: 'dblclick dbltap',\r\n\r\n    /**\r\n     * Check whether user agent is an Android browser.\r\n     *\r\n     * @return {string[]|null}\r\n     */\r\n    isAndroid() {\r\n        return navigator.userAgent.match(/Android/i);\r\n    },\r\n\r\n    /**\r\n     * Check whether user agent is a Black Berry browser.\r\n     *\r\n     * @return {string[]|null}\r\n     */\r\n    isBlackBerry() {\r\n        return navigator.userAgent.match(/BlackBerry/i);\r\n    },\r\n\r\n    /**\r\n     * Check whether user agent is an iOS browser.\r\n     *\r\n     * @return {string[]|null}\r\n     */\r\n    isIOS() {\r\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n    },\r\n\r\n    /**\r\n     * Check whether user agent is an Opera browser.\r\n     *\r\n     * @return {string[]|null}\r\n     */\r\n    isOpera() {\r\n        return navigator.userAgent.match(/Opera Mini/i);\r\n    },\r\n\r\n    /**\r\n     * Check whether user agent is a Windows browser.\r\n     *\r\n     * @return {string[]|null}\r\n     */\r\n    isWindows() {\r\n        return navigator.userAgent.match(/IEMobile/i);\r\n    },\r\n\r\n    /**\r\n     * Check whether user agent is a Mobile browser.\r\n     *\r\n     * @return {string[]|null}\r\n     */\r\n    isMobile() {\r\n        return this.isAndroid() || this.isBlackBerry() || this.isIOS() || this.isOpera() || this.isWindows();\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./scripts/Environment.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Sprites Definition\r\n *\r\n * All the game sprites are loaded dynamically by this script. Just\r\n * add a new item on the array.\r\n *\r\n * @type {Object[]}\r\n */\r\nexport default [\r\n    {\r\n        id: 'guard',\r\n        src: 'images/guard.png'\r\n    },\r\n    {\r\n        id: 'comet',\r\n        src: 'images/comet.png'\r\n    },\r\n    {\r\n        id: 'bomb',\r\n        src: 'images/bomb.png'\r\n    },\r\n    {\r\n        id: 'gshield',\r\n        src: 'images/gshield.png'\r\n    },\r\n    {\r\n        id: 'sshield',\r\n        src: 'images/sshield.png'\r\n    },\r\n    {\r\n        id: 'spaceship',\r\n        src: 'images/spaceship.png'\r\n    },\r\n    {\r\n        id: 'introScreen',\r\n        src: 'images/intro-screen.png'\r\n    }\r\n];\n\n\n// WEBPACK FOOTER //\n// ./scripts/Sprites.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\nimport {SCALE} from './Constants';\r\nimport Levels from './Levels';\r\n\r\n/**\r\n * Comet Class\r\n *\r\n * Space objects that involve damage to the guard and the spaceship.\r\n */\r\nexport default class Comet {\r\n    /**\r\n     * Class constructor.\r\n     *\r\n     * @param {Spaceguard} spaceguard Spaceguard game instance.\r\n     */\r\n    constructor(spaceguard) {\r\n        this.spaceguard = spaceguard;\r\n        this.x;\r\n        this.y;\r\n        this.a; // extra direction handling\r\n        this.width = 60 * SCALE;\r\n        this.height = 60 * SCALE;\r\n        this.speedX = Levels[this.spaceguard.level].comet.speed * Math.random();\r\n        this.speedY = Levels[this.spaceguard.level].comet.speed * Math.random();\r\n        this.damage = Math.floor(Math.random() * Levels[this.spaceguard.level].comet.damage);\r\n        this.dfs = 30 * SCALE; // initial distance from scene\r\n        this.destroyed = false;\r\n    }\r\n\r\n    /**\r\n     * Update comet position on screen.\r\n     */\r\n    position() {\r\n        let canvasSide = Math.ceil(Math.random() * 4);\r\n\r\n        switch (canvasSide) {\r\n            case 1: // top\r\n                this.y = -1 * this.dfs;\r\n                this.x = Math.ceil(Math.random() * spaceguard.canvas.width);\r\n                if (this.x > this.spaceguard.canvas.width / 2) {\r\n                    this.speedX = -1 * this.speedX;\r\n                }\r\n                this.speedY = -1 * this.speedY;\r\n                break;\r\n            case 2: // right\r\n                this.x = spaceguard.canvas.width + this.dfs;\r\n                this.y = Math.ceil(Math.random() * spaceguard.canvas.height);\r\n                if (this.y > this.spaceguard.canvas.height / 2) {\r\n                    this.speedY = -1 * this.speedY;\r\n                }\r\n                this.speedX = -1 * this.speedX;\r\n                break;\r\n            case 3:  // bottom\r\n                this.y = spaceguard.canvas.height + this.dfs;\r\n                this.x = Math.ceil(Math.random() * spaceguard.canvas.width);\r\n                if (this.x > this.spaceguard.canvas.width / 2) {\r\n                    this.speedX = -1 * this.speedX;\r\n                }\r\n                break;\r\n            case 4: // left\r\n                this.x = -1 * this.dfs;\r\n                this.y = Math.ceil(Math.random() * spaceguard.canvas.height);\r\n                if (this.y > this.spaceguard.canvas.height / 2) {\r\n                    this.speedY = -1 * this.speedY;\r\n                }\r\n        }\r\n\r\n        this.a = Math.random() * 1;\r\n    }\r\n\r\n    /**\r\n     * Draw comet object on screen.\r\n     */\r\n    draw() {\r\n        // Move\r\n        this.x += this.a * Math.ceil(Math.random() * this.speedX) + Math.round(this.speedX / 2);\r\n        this.y += this.a * Math.ceil(Math.random() * this.speedY) + Math.round(this.speedY / 2);\r\n\r\n        // Check if comet is out of map\r\n        this.isOutOfMap();\r\n\r\n        // Draw\r\n        this.spaceguard.ctx.drawImage(this.spaceguard.sprites.comet, this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * Check whether the comet has gone out of the map.\r\n     */\r\n    isOutOfMap() {\r\n        // If the comet is too far from the map frame it means that it needs to be destroyed cause it will\r\n        // no longer play any part on the game.\r\n        const dist = Math.abs(Math.sqrt(Math.pow(this.x - this.spaceguard.cx, 2) + Math.pow(this.y - this.spaceguard.cy, 2)));\r\n\r\n        if (dist > (this.spaceguard.canvas.width)) {\r\n            this.destroyed = true;\r\n        }\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/Comet.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\nimport {SCALE, OBJ_TYPE_BOMB} from './Constants';\r\n\r\n/**\r\n * Bomb Class\r\n *\r\n * Space object that explodes when the guard collides with it.\r\n */\r\nexport default class Bomb {\r\n    /**\r\n     * Class constructor.\r\n     *\r\n     * @param {Spaceguard} spaceguard Spaceguard game instance.\r\n     */\r\n    constructor(spaceguard) {\r\n        this.spaceguard = spaceguard;\r\n        this.type = OBJ_TYPE_BOMB;\r\n        this.x = Math.round(Math.random() * this.spaceguard.canvas.width * SCALE);\r\n        this.y = Math.round(Math.random() * this.spaceguard.canvas.height * SCALE);\r\n        this.width = 30 * SCALE;\r\n        this.height = 30 * SCALE;\r\n        this.damage = 20; // base damage value\r\n        this.value = Math.ceil(Math.random() * this.damage) + this.damage;\r\n    }\r\n\r\n    /**\r\n     * Trigger bomb object.\r\n     */\r\n    trigger() {\r\n        this.spaceguard.guard.shield -= this.value;\r\n        this.destroyed = true;\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./scripts/Bomb.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\nimport {SCALE, SHIELD_SCORE, OBJ_TYPE_SSHIELD} from './Constants';\r\nimport Levels from './Levels';\r\n\r\n/**\r\n * Spaceship Shield Class\r\n *\r\n * Power up that increases the spaceship shields.\r\n */\r\nexport default class Spaceguard {\r\n    /**\r\n     * Class constructor.\r\n     *\r\n     * @param {Spaceguard} spaceguard Spaceguard game instance.\r\n     */\r\n    constructor(spaceguard) {\r\n        this.spaceguard = spaceguard;\r\n        this.type = OBJ_TYPE_SSHIELD;\r\n        this.x = Math.round(Math.random() * this.spaceguard.canvas.width * SCALE);\r\n        this.y = Math.round(Math.random() * this.spaceguard.canvas.height * SCALE);\r\n        this.width = 30 * SCALE;\r\n        this.height = 30 * SCALE;\r\n        this.shield = 10; // base power up value\r\n        this.value = Math.round(Math.random() * this.shield) + this.shield;\r\n    }\r\n\r\n    /**\r\n     * Trigger Spaceship Shield object.\r\n     */\r\n    trigger() {\r\n        this.spaceguard.spaceship.shield += this.value;\r\n        if (this.spaceguard.spaceship.shield > Levels[this.spaceguard.level].spaceship.shield) {\r\n            this.spaceguard.spaceship.shield = Levels[this.spaceguard.level].spaceship.shield;\r\n        }\r\n        this.spaceguard.score += SHIELD_SCORE;\r\n        this.destroyed = true;\r\n    };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./scripts/SpaceshipShield.js","/* ----------------------------------------------------------------------------\r\n * Spaceguard - Arcade Space Game written in JavaScript\r\n *\r\n * @package     Spaceguard\r\n * @author      A.Tselegidis <alextselegidis@gmail.com>\r\n * @copyright   Copyright (c) 2013 - 2017, Alex Tselegidis\r\n * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3\r\n * @link        http://alextselegidis.com/spaceguard\r\n * ---------------------------------------------------------------------------- */\r\n\r\nimport {SCALE, SHIELD_SCORE, OBJ_TYPE_GSHIELD} from './Constants';\r\nimport Levels from './Levels';\r\n\r\n/**\r\n * Guard Shield Class\r\n *\r\n * Power up that increases the guard shields.\r\n */\r\nexport default class GuardShield {\r\n    /**\r\n     * Class constructor.\r\n     *\r\n     * @param {Spaceguard} spaceguard Spaceguard game instance.\r\n     */\r\n    constructor(spaceguard) {\r\n        this.spaceguard = spaceguard;\r\n        this.type = OBJ_TYPE_GSHIELD;\r\n        this.destroyed = false;\r\n        this.x = Math.round(Math.random() * this.spaceguard.canvas.width * SCALE);\r\n        this.y = Math.round(Math.random() * this.spaceguard.canvas.height * SCALE);\r\n        this.width = 30 * SCALE;\r\n        this.height = 30 * SCALE;\r\n        this.shield = 10; // base power up value\r\n        this.value = Math.round(Math.random() * this.shield) + this.shield;\r\n    }\r\n\r\n    /**\r\n     * Trigger GuardShield object.\r\n     */\r\n    trigger() {\r\n        this.spaceguard.guard.shield += this.value;\r\n        if (this.spaceguard.guard.shield > Levels[this.spaceguard.level].guard.shield) {\r\n            this.spaceguard.guard.shield = Levels[this.spaceguard.level].guard.shield;\r\n        }\r\n        this.spaceguard.score += SHIELD_SCORE;\r\n        this.destroyed = true;\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./scripts/GuardShield.js"],"sourceRoot":""}